/*
 * JedicAlumno.java
 *
 * Created on 04-09-2010, 07:42:36 PM
 */
package clases.principal;

import acercade.AcercaDe;
import acercade.DatosAcercaDe;
import acercade.GPL;
import acercade.GPL.Idioma;
import ayuda.gui.GUI;
import clases.BD.Utilidades;
import clases.BD.mysql.Conexion;
import clases.BD.mysql.ConexionEjercProfesor;
import clases.BD.mysql.ConexionMensajeInbox;
import clases.BD.mysql.DatosConexion;
import clases.configuraciones.Archivo;
import clases.configuraciones.Colores;
import clases.configuraciones.Temas;
import clases.generator.*;
import clases.modelo.EjercicioProfesor;
import clases.modelo.MensajeInbox;
import clases.modelo.cellRender.CREjercicioProfesor;
import clases.modelo.cellRender.CRMensajeInbox;
import clases.modelo.listModel.LMEjercicioProfesor;
import clases.modelo.listModel.LMMensajeInbox;
import clases.recuperarClave.HiloGif;
import clases.recuperarClave.HiloRecuperarClave;
import clases.utilidades.*;
import java.awt.*;
import java.awt.datatransfer.*;
import java.awt.event.*;
import java.io.*;
import java.sql.Blob;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.plaf.basic.BasicButtonUI;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import org.fife.ui.autocomplete.*;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rsyntaxtextarea.SyntaxScheme;
import org.fife.ui.rsyntaxtextarea.Token;
import org.fife.ui.rtextarea.RTextScrollPane;
import org.jvnet.substance.SubstanceLookAndFeel;
import org.xml.sax.SAXException;
import xml.analizador.dom.JespXML;
import xml.analizador.dom.modelo.Atributo;
import xml.analizador.dom.modelo.Tag;

/**
 *
 * @author Administrador
 */
public class JedicAlumno extends javax.swing.JFrame {
    private List<Codigo> codigos;
    private List<RSyntaxTextArea> areas;
    private List<RTextScrollPane> scrolls;
    private List<EjercicioProfesor> ejerciciosServidor;
    private List<MensajeInbox> mens;
    private List tipo = new ArrayList();
    
    private int width, height;
    private int cont;
    private int index;
    
    private Utilidades u;
    private For f1, f2;
    private CompletionProvider provider;
    private AutoCompletion ac;
    private HiloRecuperarClave hp;
    private HiloGif hb;
    private HEjercicio hiloEjercicios;
    private HMensaje hiloMensajeInbox;
    private Thread hiloConexion;
    
    public static boolean conectadoAJchat;

    public JedicAlumno() throws ParserConfigurationException, SAXException, SAXException, IOException, ClassNotFoundException, SQLException{
        initComponents();
        construirObjetos();
        formatear();
        conectarBD();
        inicializarAutocompletado();
        getInformacionDeArchDeConfiguracion();
        ponerColoresEnLabels();
        verificarSiAbrirArchivoPorArgumento();
        initHistorial();
        makeAcercaDe();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        est = new javax.swing.ButtonGroup();
        fun = new javax.swing.ButtonGroup();
        var = new javax.swing.ButtonGroup();
        form_for = new javax.swing.JFrame();
        jPanel11 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        label_var_for_2 = new javax.swing.JLabel();
        valor_variable_for = new javax.swing.JTextField();
        valor_incremento = new javax.swing.JTextField();
        cbo_var_for = new javax.swing.JComboBox();
        label_var_for = new javax.swing.JLabel();
        cbofor = new javax.swing.JComboBox();
        valor_llegada = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        intermedio = new javax.swing.JComboBox();
        btn_ins_for = new javax.swing.JButton();
        form_for2 = new javax.swing.JFrame();
        btn_ins_for1 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        label_var_for_3 = new javax.swing.JLabel();
        valor_variable_for1 = new javax.swing.JTextField();
        cbo_var_for1 = new javax.swing.JComboBox();
        label_var_for1 = new javax.swing.JLabel();
        cbofor1 = new javax.swing.JComboBox();
        valor_llegada1 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        intermedio1 = new javax.swing.JComboBox();
        jLabel33 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        label_var_for_4 = new javax.swing.JLabel();
        valor_variable_for2 = new javax.swing.JTextField();
        valor_incremento2 = new javax.swing.JTextField();
        cbo_var_for2 = new javax.swing.JComboBox();
        label_var_for2 = new javax.swing.JLabel();
        cbofor2 = new javax.swing.JComboBox();
        valor_llegada2 = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        intermedio2 = new javax.swing.JComboBox();
        valor_incremento1 = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        formInicio = new javax.swing.JFrame();
        jPanel22 = new javax.swing.JPanel(){

            public void paintComponent(Graphics g){
                Dimension tamanio = getSize();
                ImageIcon imagenFondo = new ImageIcon(getClass().getResource("/imagenes/fondoClaro.png"));
                g.drawImage(imagenFondo.getImage(), 0, 0, tamanio.width, tamanio.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        };
        jLabel26 = new javax.swing.JLabel();
        btnIniciarSesion = new javax.swing.JButton();
        lblMenSesion = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        lblRecuperarClave = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        nomAlu = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        txtpas = new javax.swing.JPasswordField();
        opOffline = new javax.swing.JCheckBox();
        formBajar = new javax.swing.JFrame();
        jPanel24 = new javax.swing.JPanel();
        btnDescargarEjercicio = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        listaEjercicios = new javax.swing.JList();
        formTemas = new javax.swing.JFrame();
        jPanel25 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lisTema = new javax.swing.JList();
        jButton18 = new javax.swing.JButton();
        chkLineas = new javax.swing.JCheckBox();
        formColores = new javax.swing.JFrame();
        jPanel26 = new javax.swing.JPanel();
        lblcomentario = new javax.swing.JLabel();
        lblReservada = new javax.swing.JLabel();
        lblFunciones = new javax.swing.JLabel();
        lblCadenas = new javax.swing.JLabel();
        lblDatos = new javax.swing.JLabel();
        op3 = new javax.swing.JRadioButton();
        op4 = new javax.swing.JRadioButton();
        op5 = new javax.swing.JRadioButton();
        op6 = new javax.swing.JRadioButton();
        op7 = new javax.swing.JRadioButton();
        jLabel44 = new javax.swing.JLabel();
        jButton21 = new javax.swing.JButton();
        lblFondo = new javax.swing.JLabel();
        op8 = new javax.swing.JRadioButton();
        lblCodigo = new javax.swing.JLabel();
        op9 = new javax.swing.JRadioButton();
        op10 = new javax.swing.JRadioButton();
        lblLineas = new javax.swing.JLabel();
        jPanel27 = new javax.swing.JPanel();
        selector = new javax.swing.JColorChooser();
        jButton22 = new javax.swing.JButton();
        formContrase√±a = new javax.swing.JFrame();
        jPanel28 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        con2 = new javax.swing.JPasswordField();
        con1 = new javax.swing.JPasswordField();
        btnCmbCon = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtErr = new javax.swing.JTextArea();
        jLabel47 = new javax.swing.JLabel();
        formBarra = new javax.swing.JFrame();
        jPanel30 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        lblMen = new javax.swing.JLabel();
        jButton15 = new javax.swing.JButton();
        formInbox = new javax.swing.JFrame();
        jPanel31 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        mensajes = new javax.swing.JList();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        formAyudaC = new javax.swing.JFrame();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        panel_librerias = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        btn_ins_lib = new javax.swing.JButton();
        ctype = new javax.swing.JCheckBox();
        math = new javax.swing.JCheckBox();
        string = new javax.swing.JCheckBox();
        stdio = new javax.swing.JCheckBox();
        stdlib = new javax.swing.JCheckBox();
        conio = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        txtlib = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        panel_estructuras_control = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaEst = new javax.swing.JList();
        jScrollPane9 = new javax.swing.JScrollPane();
        listaFuncionesC = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        txt_cases = new javax.swing.JTextField();
        btn_switch = new javax.swing.JButton();
        panel_variables = new javax.swing.JPanel();
        cboTipoVariable = new javax.swing.JComboBox();
        txt_var = new javax.swing.JTextField();
        btn_ins_var = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        panel_funciones = new javax.swing.JPanel();
        btn_ins_fun = new javax.swing.JButton();
        cboTipoRetorno = new javax.swing.JComboBox();
        txt_nom_fun = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_par_fun = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        dialogCompilacion = new javax.swing.JDialog();
        pbCompi = new javax.swing.JProgressBar();
        textoDialogo = new javax.swing.JLabel();
        barra_herramientas = new javax.swing.JToolBar();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btn_nue_barra = new javax.swing.JButton();
        btn_abr_barra = new javax.swing.JButton();
        btn_gua_barra = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btn_cop_barra = new javax.swing.JButton();
        btn_copsel_barra = new javax.swing.JButton();
        btn_peg_barra = new javax.swing.JButton();
        btn_bor_barra = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btn_compi_barra = new javax.swing.JButton();
        btn_ejecom_barra = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnVerificarEjer = new javax.swing.JButton();
        btnSubirEjer = new javax.swing.JButton();
        btnInbox = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btnCambiarClave = new javax.swing.JButton();
        jSeparator29 = new javax.swing.JToolBar.Separator();
        btnChat = new javax.swing.JButton();
        jSplitPane2 = new javax.swing.JSplitPane();
        tabconte = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        salerrores = new javax.swing.JTextArea();
        menu_aplicacion = new javax.swing.JMenuBar();
        menu_archivo = new javax.swing.JMenu();
        m_nueva_codificacion = new javax.swing.JMenuItem();
        jSeparator20 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        m_guardar = new javax.swing.JMenuItem();
        m_guardar_como = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jSeparator15 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        menu_edicion = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        opPantallaCompleta = new javax.swing.JCheckBoxMenuItem();
        menu_insertar = new javax.swing.JMenu();
        m_libreria = new javax.swing.JMenu();
        m_stdio = new javax.swing.JMenuItem();
        m_stdlib = new javax.swing.JMenuItem();
        m_math = new javax.swing.JMenuItem();
        m_string = new javax.swing.JMenuItem();
        m_conio = new javax.swing.JMenuItem();
        m_ctype = new javax.swing.JMenuItem();
        jSeparator17 = new javax.swing.JPopupMenu.Separator();
        m_ini_met_main = new javax.swing.JMenuItem();
        jSeparator19 = new javax.swing.JPopupMenu.Separator();
        m_variables = new javax.swing.JMenu();
        m_short = new javax.swing.JMenuItem();
        m_int = new javax.swing.JMenuItem();
        m_long = new javax.swing.JMenuItem();
        m_float = new javax.swing.JMenuItem();
        m_double = new javax.swing.JMenuItem();
        m_char = new javax.swing.JMenuItem();
        m_bool = new javax.swing.JMenuItem();
        m_est_de_control = new javax.swing.JMenu();
        m_while = new javax.swing.JMenuItem();
        m_dowhile = new javax.swing.JMenuItem();
        m_if = new javax.swing.JMenuItem();
        m_iselse = new javax.swing.JMenuItem();
        m_for = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        m_switchcase = new javax.swing.JMenuItem();
        m_printf = new javax.swing.JMenuItem();
        m_scanf = new javax.swing.JMenuItem();
        m_systemcls = new javax.swing.JMenuItem();
        m_systempause = new javax.swing.JMenuItem();
        m_getche = new javax.swing.JMenuItem();
        jSeparator18 = new javax.swing.JPopupMenu.Separator();
        m_cierre_met_main = new javax.swing.JMenuItem();
        jSeparator14 = new javax.swing.JPopupMenu.Separator();
        m_cod_pre = new javax.swing.JMenu();
        m_cod_1 = new javax.swing.JMenuItem();
        m_cod_2 = new javax.swing.JMenuItem();
        m_cod_3 = new javax.swing.JMenuItem();
        menu_ejecutar = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        m_complilar = new javax.swing.JMenuItem();
        jSeparator16 = new javax.swing.JPopupMenu.Separator();
        m_ejecutar = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jSeparator30 = new javax.swing.JPopupMenu.Separator();
        menuCambiarClave = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        menuVerificar = new javax.swing.JMenuItem();
        menuSubir = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        menuChat = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        menuItemAcercaDe = new javax.swing.JMenuItem();

        form_for.setTitle("Ciclo for");
        form_for.setAlwaysOnTop(true);
        form_for.setResizable(false);
        form_for.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                form_forComponentResized(evt);
            }
        });
        form_for.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Ciclo For"));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel29.setText(")");
        jPanel11.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, 20));

        jLabel31.setText("=");
        jPanel11.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, 20));

        label_var_for_2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label_var_for_2.setText("; i = i  ");
        jPanel11.add(label_var_for_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 50, 20));
        jPanel11.add(valor_variable_for, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 20, -1));
        jPanel11.add(valor_incremento, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 20, -1));

        cbo_var_for.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "i", "j", "k" }));
        cbo_var_for.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_var_forActionPerformed(evt);
            }
        });
        jPanel11.add(cbo_var_for, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 40, -1));

        label_var_for.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label_var_for.setText("; i");
        jPanel11.add(label_var_for, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 40, 20));

        cbofor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "+", "-" }));
        jPanel11.add(cbofor, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 40, -1));
        jPanel11.add(valor_llegada, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 20, -1));

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel34.setText("for(");
        jPanel11.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 20));

        intermedio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<", ">", "<=", ">=" }));
        jPanel11.add(intermedio, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 50, -1));

        form_for.getContentPane().add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 400, 60));

        btn_ins_for.setText("Insertar ciclo For");
        btn_ins_for.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ins_forActionPerformed(evt);
            }
        });
        form_for.getContentPane().add(btn_ins_for, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 130, 30));

        form_for2.setTitle("Ciclo for");
        form_for2.setAlwaysOnTop(true);
        form_for2.setResizable(false);
        form_for2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                form_for2ComponentResized(evt);
            }
        });
        form_for2.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_ins_for1.setText("Insertar ciclo For");
        btn_ins_for1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ins_for1ActionPerformed(evt);
            }
        });
        form_for2.getContentPane().add(btn_ins_for1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 130, 30));

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Ciclo For x2"));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel30.setText(")");
        jPanel12.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, -1, 20));

        jLabel32.setText("=");
        jPanel12.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, 20));

        label_var_for_3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label_var_for_3.setText("; i = i  ");
        jPanel12.add(label_var_for_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, 50, 20));
        jPanel12.add(valor_variable_for1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 20, -1));

        cbo_var_for1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "i", "j", "k" }));
        cbo_var_for1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_var_for1ActionPerformed(evt);
            }
        });
        jPanel12.add(cbo_var_for1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 40, -1));

        label_var_for1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label_var_for1.setText("; i");
        jPanel12.add(label_var_for1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 40, 20));

        cbofor1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "+", "-" }));
        jPanel12.add(cbofor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 40, -1));
        jPanel12.add(valor_llegada1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 20, -1));

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel35.setText("for(");
        jPanel12.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 20));

        intermedio1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<", ">", "<=", ">=" }));
        jPanel12.add(intermedio1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 50, -1));

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel33.setText(")");
        jPanel12.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, -1, 20));

        jLabel36.setText("=");
        jPanel12.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, -1, 20));

        label_var_for_4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label_var_for_4.setText("; i = i  ");
        jPanel12.add(label_var_for_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 50, 20));
        jPanel12.add(valor_variable_for2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 20, -1));
        jPanel12.add(valor_incremento2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, 20, -1));

        cbo_var_for2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "i", "j", "k" }));
        cbo_var_for2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_var_for2ActionPerformed(evt);
            }
        });
        jPanel12.add(cbo_var_for2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 40, -1));

        label_var_for2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label_var_for2.setText("; i");
        jPanel12.add(label_var_for2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 40, 20));

        cbofor2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "+", "-" }));
        jPanel12.add(cbofor2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 40, -1));
        jPanel12.add(valor_llegada2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 20, -1));

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel37.setText("for(");
        jPanel12.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, 20));

        intermedio2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<", ">", "<=", ">=" }));
        jPanel12.add(intermedio2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 50, -1));
        jPanel12.add(valor_incremento1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 20, -1));

        form_for2.getContentPane().add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 400, 100));

        formInicio.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formInicioWindowClosing(evt);
            }
        });

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logo_200.png"))); // NOI18N

        btnIniciarSesion.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        btnIniciarSesion.setText("Ingresar");
        btnIniciarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarSesionActionPerformed(evt);
            }
        });

        lblMenSesion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMenSesion.setForeground(new java.awt.Color(0, 153, 0));
        lblMenSesion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jPanel23.setBackground(new java.awt.Color(255, 255, 255));
        jPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel23.setOpaque(false);
        jPanel23.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblRecuperarClave.setFont(new java.awt.Font("Courier New", 1, 11)); // NOI18N
        lblRecuperarClave.setForeground(new java.awt.Color(0, 51, 204));
        lblRecuperarClave.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblRecuperarClave.setText("<html><u>Recuperar Contrase√±a</u></html>");
        lblRecuperarClave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblRecuperarClaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblRecuperarClaveMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblRecuperarClaveMouseReleased(evt);
            }
        });
        jPanel23.add(lblRecuperarClave, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 150, 20));

        jLabel38.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        jLabel38.setText("Usuario:");
        jPanel23.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, 20));

        nomAlu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nomAluKeyReleased(evt);
            }
        });
        jPanel23.add(nomAlu, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 170, -1));

        jLabel39.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        jLabel39.setText("Contrase√±a:");
        jPanel23.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 20));

        txtpas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpasKeyReleased(evt);
            }
        });
        jPanel23.add(txtpas, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 70, -1));

        opOffline.setBackground(new java.awt.Color(255, 255, 255));
        opOffline.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        opOffline.setText("Modalidad offline");
        jPanel23.add(opOffline, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, -1, -1));

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE))
                    .addComponent(lblMenSesion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(btnIniciarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(lblMenSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIniciarSesion)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        formInicio.getContentPane().add(jPanel22, java.awt.BorderLayout.CENTER);

        formBajar.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formBajarComponentResized(evt);
            }
        });
        formBajar.getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));

        btnDescargarEjercicio.setText("Descargar ejercicio");
        btnDescargarEjercicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarEjercicioActionPerformed(evt);
            }
        });

        listaEjercicios.setBorder(javax.swing.BorderFactory.createTitledBorder("Ejercicios"));
        jScrollPane6.setViewportView(listaEjercicios);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
            .addComponent(btnDescargarEjercicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDescargarEjercicio, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        formBajar.getContentPane().add(jPanel24);

        formTemas.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccione alg√∫n tema"));
        jPanel25.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lisTema.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Autumn", "BusinessBlackSteel", "BusinessBlueSteel", "Business", "CremeCoffee", "Creme", "EmeraldDusk", "FieldOfWheat", "FindingNemo", "GreenMagic", "Magma", "Mango", "MistAqua", "Moderate", "NebulaBrickWall", "Nebula", "OfficeBlue2007", "OfficeSilver2007", "RavenGraphiteGlass", "RavenGraphite", "Raven", "Sahara" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lisTema.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lisTemaMouseReleased(evt);
            }
        });
        lisTema.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lisTemaKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(lisTema);

        jPanel25.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 190, 180));

        formTemas.getContentPane().add(jPanel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 210));

        jButton18.setText("Aceptar");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        formTemas.getContentPane().add(jButton18, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 220, -1, -1));

        chkLineas.setText("N√∫mero de L√≠neas");
        chkLineas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkLineasActionPerformed(evt);
            }
        });
        formTemas.getContentPane().add(chkLineas, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        formColores.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder("Aplicar Color a"));
        jPanel26.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblcomentario.setBackground(new java.awt.Color(255, 255, 255));
        lblcomentario.setFont(new java.awt.Font("Courier New", 2, 11)); // NOI18N
        lblcomentario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblcomentario.setText("//comentario");
        lblcomentario.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblcomentario.setOpaque(true);
        jPanel26.add(lblcomentario, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 170, 30));

        lblReservada.setBackground(new java.awt.Color(255, 255, 255));
        lblReservada.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        lblReservada.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReservada.setText("for, while, if...");
        lblReservada.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblReservada.setOpaque(true);
        jPanel26.add(lblReservada, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 170, 30));

        lblFunciones.setBackground(new java.awt.Color(255, 255, 255));
        lblFunciones.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        lblFunciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFunciones.setText("printf, scanf...");
        lblFunciones.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblFunciones.setOpaque(true);
        jPanel26.add(lblFunciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 170, 30));

        lblCadenas.setBackground(new java.awt.Color(255, 255, 255));
        lblCadenas.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        lblCadenas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCadenas.setText("\"cadena\" 0123");
        lblCadenas.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblCadenas.setOpaque(true);
        jPanel26.add(lblCadenas, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 170, 30));

        lblDatos.setBackground(new java.awt.Color(255, 255, 255));
        lblDatos.setFont(new java.awt.Font("Courier New", 1, 11)); // NOI18N
        lblDatos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDatos.setText("int, char, long...");
        lblDatos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblDatos.setOpaque(true);
        jPanel26.add(lblDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 170, 30));

        op3.setText("Comentario");
        op3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op3ActionPerformed(evt);
            }
        });
        jPanel26.add(op3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, -1, 30));

        op4.setText("Palabra Reservada (return, for, if, etc)");
        op4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op4ActionPerformed(evt);
            }
        });
        jPanel26.add(op4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, -1, 30));

        op5.setText("Funciones (printf, scanf, etc)");
        op5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op5ActionPerformed(evt);
            }
        });
        jPanel26.add(op5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, -1, 30));

        op6.setText("Cadenas y N√∫meros");
        op6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op6ActionPerformed(evt);
            }
        });
        jPanel26.add(op6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, -1, 30));

        op7.setText("Tipo de Datos (int, char, long, etc)");
        op7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op7ActionPerformed(evt);
            }
        });
        jPanel26.add(op7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, -1, 30));

        jLabel44.setFont(new java.awt.Font("DejaVu Sans", 3, 11)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("Color Actual");
        jPanel26.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 90, 30));

        jButton21.setText("Reestablecer Colores");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        jPanel26.add(jButton21, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 410, 160, -1));

        lblFondo.setBackground(new java.awt.Color(255, 255, 255));
        lblFondo.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        lblFondo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFondo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblFondo.setOpaque(true);
        jPanel26.add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 170, 30));

        op8.setText("Fondo");
        op8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op8ActionPerformed(evt);
            }
        });
        jPanel26.add(op8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, -1, 30));

        lblCodigo.setBackground(new java.awt.Color(255, 255, 255));
        lblCodigo.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        lblCodigo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCodigo.setText("main");
        lblCodigo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblCodigo.setOpaque(true);
        jPanel26.add(lblCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 170, 30));

        op9.setText("Resto de C√≥digo");
        jPanel26.add(op9, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, -1, 30));

        op10.setText("L√≠nea Seleccionada");
        jPanel26.add(op10, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 260, -1, 30));

        lblLineas.setBackground(new java.awt.Color(255, 255, 255));
        lblLineas.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        lblLineas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLineas.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblLineas.setOpaque(true);
        jPanel26.add(lblLineas, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 170, 30));

        formColores.getContentPane().add(jPanel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 440));

        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecci√≥n de Color"));
        jPanel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel27MouseReleased(evt);
            }
        });
        jPanel27.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        selector.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel27.add(selector, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 450, 380));

        jButton22.setText("Aplicar Colores");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        jPanel27.add(jButton22, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 400, 170, -1));

        formColores.getContentPane().add(jPanel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 0, 470, 440));

        jPanel28.setBackground(new java.awt.Color(255, 255, 255));
        jPanel28.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel29.setBackground(new java.awt.Color(255, 255, 255));
        jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder("Informaci√≥n"));
        jPanel29.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel45.setText("Contrase√±a Nueva:");
        jPanel29.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 20));

        jLabel46.setText("Repetir Contrase√±a:");
        jPanel29.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, 20));

        con2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                con2KeyReleased(evt);
            }
        });
        jPanel29.add(con2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 120, -1));

        con1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                con1KeyReleased(evt);
            }
        });
        jPanel29.add(con1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 120, -1));

        jPanel28.add(jPanel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 300, 110));

        btnCmbCon.setText("Cambiar Contrase√±a");
        btnCmbCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCmbConActionPerformed(evt);
            }
        });
        jPanel28.add(btnCmbCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 130, -1));

        txtErr.setColumns(20);
        txtErr.setEditable(false);
        txtErr.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        txtErr.setForeground(new java.awt.Color(255, 0, 0));
        txtErr.setLineWrap(true);
        txtErr.setRows(5);
        jScrollPane5.setViewportView(txtErr);

        jPanel28.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 350, 150));

        jLabel47.setText("Errores:");
        jPanel28.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, -1, -1));

        formContrase√±a.getContentPane().add(jPanel28, java.awt.BorderLayout.CENTER);

        formBarra.setFocusableWindowState(false);
        formBarra.setUndecorated(true);

        jPanel30.setBackground(new java.awt.Color(255, 255, 255));
        jPanel30.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/procesando.gif"))); // NOI18N
        jPanel30.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        lblMen.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblMen.setText("Procesando");
        jPanel30.add(lblMen, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 200, 70));

        jButton15.setText("Cancelar");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel30.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, -1, -1));

        formBarra.getContentPane().add(jPanel30, java.awt.BorderLayout.CENTER);

        formInbox.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formInboxComponentResized(evt);
            }
        });

        mensajes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mensajesMouseReleased(evt);
            }
        });
        jScrollPane7.setViewportView(mensajes);

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel42.setText("De:");

        jLabel43.setText("Fecha:");

        jLabel48.setText("Mensaje:");

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane8.setViewportView(jTextArea1);

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel52.setText("Asunto:");

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logo_200.png"))); // NOI18N

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42)
                            .addComponent(jLabel48))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel31Layout.createSequentialGroup()
                                .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(305, 305, 305))
                            .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel31Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel13)))
                .addContainerGap())
        );

        jPanel31Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel42, jLabel43, jLabel48});

        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel52, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel48)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addContainerGap())
        );

        formInbox.getContentPane().add(jPanel31, java.awt.BorderLayout.CENTER);

        formAyudaC.setTitle("Insertor de c√≥digo");
        formAyudaC.setAlwaysOnTop(true);
        formAyudaC.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formAyudaCComponentResized(evt);
            }
        });

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Librer√≠as predefinidas"));

        btn_ins_lib.setText("Incluir Librer√≠a(s)");
        btn_ins_lib.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ins_libActionPerformed(evt);
            }
        });

        ctype.setText("ctype.h");

        math.setText("math.h");

        string.setText("string.h");

        stdio.setText("stdio.h");

        stdlib.setText("stdlib.h");

        conio.setText("conio.h");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(string, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(stdio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stdlib, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(conio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(math, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ctype, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)))
                    .addComponent(btn_ins_lib, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stdio)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stdlib)
                            .addComponent(math))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ctype)
                            .addComponent(conio)
                            .addComponent(string))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_ins_lib)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText(".h>");

        txtlib.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtlibMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtlibMousePressed(evt);
            }
        });
        txtlib.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlibActionPerformed(evt);
            }
        });
        txtlib.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtlibFocusLost(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("<");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Nombre Librer√≠a:");

        javax.swing.GroupLayout panel_libreriasLayout = new javax.swing.GroupLayout(panel_librerias);
        panel_librerias.setLayout(panel_libreriasLayout);
        panel_libreriasLayout.setHorizontalGroup(
            panel_libreriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_libreriasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_libreriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_libreriasLayout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10))
                    .addGroup(panel_libreriasLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txtlib)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))))
        );
        panel_libreriasLayout.setVerticalGroup(
            panel_libreriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_libreriasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_libreriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtlib)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(150, 150, 150))
        );

        jTabbedPane2.addTab("Librer√≠as", panel_librerias);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        listaEst.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "while", "do-while", "if", "if-else", "for", "for x2" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listaEst.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaEst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                listaEstMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(listaEst);

        jScrollPane9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        listaFuncionesC.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "printf(\"\");", "scanf(\"\");", "Hacer una pausa" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listaFuncionesC.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaFuncionesC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                listaFuncionesCMouseReleased(evt);
            }
        });
        jScrollPane9.setViewportView(listaFuncionesC);

        jLabel4.setText("N¬∫ de Cases:");

        txt_cases.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_casesKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_casesKeyReleased(evt);
            }
        });

        btn_switch.setText("switch-case");
        btn_switch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_switchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_estructuras_controlLayout = new javax.swing.GroupLayout(panel_estructuras_control);
        panel_estructuras_control.setLayout(panel_estructuras_controlLayout);
        panel_estructuras_controlLayout.setHorizontalGroup(
            panel_estructuras_controlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_estructuras_controlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_estructuras_controlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_estructuras_controlLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txt_cases))
                    .addGroup(panel_estructuras_controlLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))
                    .addComponent(btn_switch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel_estructuras_controlLayout.setVerticalGroup(
            panel_estructuras_controlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_estructuras_controlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_estructuras_controlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_estructuras_controlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_cases, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(btn_switch)
                .addGap(130, 130, 130))
        );

        jTabbedPane2.addTab("Estructuras de control y funciones definidas de C", panel_estructuras_control);

        cboTipoVariable.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "bool", "short", "int", "long", "float", "double", "char" }));

        txt_var.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_var.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txt_varMousePressed(evt);
            }
        });
        txt_var.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_varKeyPressed(evt);
            }
        });

        btn_ins_var.setText("Insertar variable");
        btn_ins_var.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ins_varActionPerformed(evt);
            }
        });

        jLabel1.setText(";");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Tipo de dato");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Nombre de la variable");

        javax.swing.GroupLayout panel_variablesLayout = new javax.swing.GroupLayout(panel_variables);
        panel_variables.setLayout(panel_variablesLayout);
        panel_variablesLayout.setHorizontalGroup(
            panel_variablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_variablesLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panel_variablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_ins_var, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel_variablesLayout.createSequentialGroup()
                        .addGroup(panel_variablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboTipoVariable, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_variablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_var)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panel_variablesLayout.setVerticalGroup(
            panel_variablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_variablesLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(panel_variablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_variablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTipoVariable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_var, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_ins_var)
                .addGap(178, 178, 178))
        );

        jTabbedPane2.addTab("Variables", panel_variables);

        btn_ins_fun.setText("Insertar funci√≥n");
        btn_ins_fun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ins_funActionPerformed(evt);
            }
        });

        cboTipoRetorno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "void", "bool", "short", "int", "long", "float", "double", "char" }));

        txt_nom_fun.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nom_funKeyPressed(evt);
            }
        });

        jLabel2.setText("(");

        jLabel5.setText(");");

        txt_par_fun.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txt_par_funMousePressed(evt);
            }
        });
        txt_par_fun.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_par_funKeyPressed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Tipo de retorno");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Nombre de la funci√≥n");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("(par√°metros de la funci√≥n);");

        jButton8.setText("Crear funci√≥n principal (main)");
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setText("Darle cuerpo a las funciones");
        jButton10.setFocusable(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_funcionesLayout = new javax.swing.GroupLayout(panel_funciones);
        panel_funciones.setLayout(panel_funcionesLayout);
        panel_funcionesLayout.setHorizontalGroup(
            panel_funcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_funcionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_funcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_ins_fun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel_funcionesLayout.createSequentialGroup()
                        .addGroup(panel_funcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addComponent(cboTipoRetorno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_funcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_nom_fun)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_funcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_funcionesLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_par_fun)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addGap(15, 15, 15))
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)))
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel_funcionesLayout.setVerticalGroup(
            panel_funcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_funcionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_funcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_funcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_funcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_par_fun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_funcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboTipoRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_nom_fun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_ins_fun)
                .addGap(18, 18, 18)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Funciones", panel_funciones);

        javax.swing.GroupLayout formAyudaCLayout = new javax.swing.GroupLayout(formAyudaC.getContentPane());
        formAyudaC.getContentPane().setLayout(formAyudaCLayout);
        formAyudaCLayout.setHorizontalGroup(
            formAyudaCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        formAyudaCLayout.setVerticalGroup(
            formAyudaCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
        );

        pbCompi.setIndeterminate(true);

        textoDialogo.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        textoDialogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textoDialogo.setText("Compilando...");
        textoDialogo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout dialogCompilacionLayout = new javax.swing.GroupLayout(dialogCompilacion.getContentPane());
        dialogCompilacion.getContentPane().setLayout(dialogCompilacionLayout);
        dialogCompilacionLayout.setHorizontalGroup(
            dialogCompilacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pbCompi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(textoDialogo, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
        );
        dialogCompilacionLayout.setVerticalGroup(
            dialogCompilacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogCompilacionLayout.createSequentialGroup()
                .addComponent(textoDialogo, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pbCompi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setIconImage(new javax.swing.ImageIcon(this.getClass().getResource("/imagenes/iconoArriba.png")).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        barra_herramientas.setFloatable(false);
        barra_herramientas.setRollover(true);
        barra_herramientas.add(jSeparator4);

        btn_nue_barra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/document--plus.png"))); // NOI18N
        btn_nue_barra.setToolTipText("Nueva Codificaci√≥n (ctrl + n)");
        btn_nue_barra.setFocusable(false);
        btn_nue_barra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_nue_barra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_nue_barra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nue_barraActionPerformed(evt);
            }
        });
        barra_herramientas.add(btn_nue_barra);

        btn_abr_barra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/folder-horizontal-open.png"))); // NOI18N
        btn_abr_barra.setToolTipText("Abrir C√≥digo... (ctrl + a)");
        btn_abr_barra.setFocusable(false);
        btn_abr_barra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_abr_barra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_abr_barra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_abr_barraActionPerformed(evt);
            }
        });
        barra_herramientas.add(btn_abr_barra);

        btn_gua_barra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/disk-return.png"))); // NOI18N
        btn_gua_barra.setToolTipText("Guardar");
        btn_gua_barra.setFocusable(false);
        btn_gua_barra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_gua_barra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_gua_barra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gua_barraActionPerformed(evt);
            }
        });
        barra_herramientas.add(btn_gua_barra);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/printer_mono.png"))); // NOI18N
        jButton6.setToolTipText("Imprimir C√≥digo Actual (ctrl + p)");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        barra_herramientas.add(jButton6);
        barra_herramientas.add(jSeparator1);

        btn_cop_barra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/document-copy.png"))); // NOI18N
        btn_cop_barra.setToolTipText("Copiar Codificaci√≥n");
        btn_cop_barra.setFocusable(false);
        btn_cop_barra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_cop_barra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_cop_barra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cop_barraActionPerformed(evt);
            }
        });
        barra_herramientas.add(btn_cop_barra);

        btn_copsel_barra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ui-text-field-select.png"))); // NOI18N
        btn_copsel_barra.setToolTipText("Copiar Texto Seleccionado");
        btn_copsel_barra.setFocusable(false);
        btn_copsel_barra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_copsel_barra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_copsel_barra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn_copsel_barraMouseReleased(evt);
            }
        });
        btn_copsel_barra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_copsel_barraActionPerformed(evt);
            }
        });
        barra_herramientas.add(btn_copsel_barra);

        btn_peg_barra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/clipboard-paste-document-text.png"))); // NOI18N
        btn_peg_barra.setToolTipText("Pegar");
        btn_peg_barra.setFocusable(false);
        btn_peg_barra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_peg_barra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_peg_barra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_peg_barraActionPerformed(evt);
            }
        });
        barra_herramientas.add(btn_peg_barra);

        btn_bor_barra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/document-hf-delete-footer.png"))); // NOI18N
        btn_bor_barra.setToolTipText("Borrar TODA la Codificaci√≥n");
        btn_bor_barra.setFocusable(false);
        btn_bor_barra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_bor_barra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_bor_barra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bor_barraActionPerformed(evt);
            }
        });
        barra_herramientas.add(btn_bor_barra);
        barra_herramientas.add(jSeparator2);

        btn_compi_barra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/status.png"))); // NOI18N
        btn_compi_barra.setToolTipText("Compilar Archivo (F6)");
        btn_compi_barra.setFocusable(false);
        btn_compi_barra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_compi_barra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_compi_barra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_compi_barraActionPerformed(evt);
            }
        });
        barra_herramientas.add(btn_compi_barra);

        btn_ejecom_barra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/play_green.png"))); // NOI18N
        btn_ejecom_barra.setToolTipText("Compilar y Ejecutar Archivo (F9)");
        btn_ejecom_barra.setFocusable(false);
        btn_ejecom_barra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_ejecom_barra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_ejecom_barra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ejecom_barraActionPerformed(evt);
            }
        });
        barra_herramientas.add(btn_ejecom_barra);
        barra_herramientas.add(jSeparator3);

        btnVerificarEjer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/server.png"))); // NOI18N
        btnVerificarEjer.setToolTipText("Verificar Ejercicios en el Servidor");
        btnVerificarEjer.setFocusable(false);
        btnVerificarEjer.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnVerificarEjer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVerificarEjer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerificarEjerActionPerformed(evt);
            }
        });
        barra_herramientas.add(btnVerificarEjer);

        btnSubirEjer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/upload.png"))); // NOI18N
        btnSubirEjer.setToolTipText("Subir Ejercicio");
        btnSubirEjer.setFocusable(false);
        btnSubirEjer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSubirEjer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSubirEjer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirEjerActionPerformed(evt);
            }
        });
        barra_herramientas.add(btnSubirEjer);

        btnInbox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/inbox.png"))); // NOI18N
        btnInbox.setToolTipText("Revisar Inbox");
        btnInbox.setFocusable(false);
        btnInbox.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInbox.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInboxActionPerformed(evt);
            }
        });
        barra_herramientas.add(btnInbox);
        barra_herramientas.add(jSeparator8);

        btnCambiarClave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/llave.png"))); // NOI18N
        btnCambiarClave.setToolTipText("Cambiar Contrase√±a");
        btnCambiarClave.setFocusable(false);
        btnCambiarClave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCambiarClave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCambiarClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarClaveActionPerformed(evt);
            }
        });
        barra_herramientas.add(btnCambiarClave);
        barra_herramientas.add(jSeparator29);

        btnChat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/chat.png"))); // NOI18N
        btnChat.setText("JChat");
        btnChat.setFocusable(false);
        btnChat.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnChat.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChatActionPerformed(evt);
            }
        });
        barra_herramientas.add(btnChat);

        jSplitPane2.setDividerLocation(450);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setOneTouchExpandable(true);

        tabconte.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tabconte.setAutoscrolls(true);
        jSplitPane2.setLeftComponent(tabconte);

        jPanel16.setLayout(new java.awt.BorderLayout());

        salerrores.setColumns(20);
        salerrores.setEditable(false);
        salerrores.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        salerrores.setForeground(new java.awt.Color(204, 0, 0));
        salerrores.setRows(5);
        jScrollPane4.setViewportView(salerrores);

        jPanel16.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Salida", jPanel16);

        jSplitPane2.setRightComponent(jTabbedPane1);

        menu_aplicacion.setPreferredSize(new java.awt.Dimension(30, 21));

        menu_archivo.setMnemonic('a');
        menu_archivo.setText("Archivo");
        menu_archivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_archivoActionPerformed(evt);
            }
        });

        m_nueva_codificacion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        m_nueva_codificacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/document--plus.png"))); // NOI18N
        m_nueva_codificacion.setMnemonic('n');
        m_nueva_codificacion.setText("Nueva c√≥digo");
        m_nueva_codificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_nueva_codificacionActionPerformed(evt);
            }
        });
        menu_archivo.add(m_nueva_codificacion);
        menu_archivo.add(jSeparator20);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/folder-horizontal-open.png"))); // NOI18N
        jMenuItem3.setText("Abrir c√≥digo...");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        menu_archivo.add(jMenuItem3);

        m_guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        m_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/disk-return.png"))); // NOI18N
        m_guardar.setText("Guardar");
        m_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_guardarActionPerformed1(evt);
            }
        });
        menu_archivo.add(m_guardar);

        m_guardar_como.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/disks.png"))); // NOI18N
        m_guardar_como.setText("Guardar como...");
        m_guardar_como.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_guardar_comoActionPerformed(evt);
            }
        });
        menu_archivo.add(m_guardar_como);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/printer_mono.png"))); // NOI18N
        jMenuItem9.setText("Imprimir");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        menu_archivo.add(jMenuItem9);
        menu_archivo.add(jSeparator15);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/door-open-out.png"))); // NOI18N
        jMenuItem4.setText("Cerrar sesi√≥n");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        menu_archivo.add(jMenuItem4);

        menu_aplicacion.add(menu_archivo);

        menu_edicion.setMnemonic('e');
        menu_edicion.setText("Edici√≥n");

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/document-copy.png"))); // NOI18N
        jMenuItem5.setText("Copiar codificaci√≥n");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        menu_edicion.add(jMenuItem5);

        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ui-text-field-select.png"))); // NOI18N
        jMenuItem8.setText("Copiar texto seleccionado");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        menu_edicion.add(jMenuItem8);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/clipboard-paste-document-text.png"))); // NOI18N
        jMenuItem2.setText("Pegar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        menu_edicion.add(jMenuItem2);
        menu_edicion.add(jSeparator5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/document-hf-delete-footer.png"))); // NOI18N
        jMenuItem6.setText("Borrar TODA la codificaci√≥n");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        menu_edicion.add(jMenuItem6);

        menu_aplicacion.add(menu_edicion);

        jMenu1.setText("Ver");

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem10.setText("Ayuda para insertar c√≥digo");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);
        jMenu1.add(jSeparator6);

        opPantallaCompleta.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F11, 0));
        opPantallaCompleta.setText("Pantalla completa");
        opPantallaCompleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opPantallaCompletaActionPerformed(evt);
            }
        });
        jMenu1.add(opPantallaCompleta);

        menu_aplicacion.add(jMenu1);

        menu_insertar.setMnemonic('i');
        menu_insertar.setText("Insertar");

        m_libreria.setText("Librerias");

        m_stdio.setText("#include <stdio.h>");
        m_stdio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_stdioActionPerformed(evt);
            }
        });
        m_libreria.add(m_stdio);

        m_stdlib.setText("#include <stdlib.h>");
        m_stdlib.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_stdlibActionPerformed(evt);
            }
        });
        m_libreria.add(m_stdlib);

        m_math.setText("#include <math.h>");
        m_math.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_mathActionPerformed(evt);
            }
        });
        m_libreria.add(m_math);

        m_string.setText("#include <string.h>");
        m_string.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_stringActionPerformed(evt);
            }
        });
        m_libreria.add(m_string);

        m_conio.setText("#include <conio.h>");
        m_conio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_conioActionPerformed(evt);
            }
        });
        m_libreria.add(m_conio);

        m_ctype.setText("#include <ctype.h>");
        m_ctype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_ctypeActionPerformed(evt);
            }
        });
        m_libreria.add(m_ctype);

        menu_insertar.add(m_libreria);
        menu_insertar.add(jSeparator17);

        m_ini_met_main.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        m_ini_met_main.setText("Inicio de la funci√≥n main");
        m_ini_met_main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_ini_met_mainActionPerformed(evt);
            }
        });
        menu_insertar.add(m_ini_met_main);
        menu_insertar.add(jSeparator19);

        m_variables.setText("Variables");

        m_short.setText("short");
        m_short.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_shortActionPerformed(evt);
            }
        });
        m_variables.add(m_short);

        m_int.setText("int");
        m_int.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_intActionPerformed(evt);
            }
        });
        m_variables.add(m_int);

        m_long.setText("long");
        m_long.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_longActionPerformed(evt);
            }
        });
        m_variables.add(m_long);

        m_float.setText("float");
        m_float.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_floatActionPerformed(evt);
            }
        });
        m_variables.add(m_float);

        m_double.setText("double");
        m_double.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_doubleActionPerformed(evt);
            }
        });
        m_variables.add(m_double);

        m_char.setText("char");
        m_char.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_charActionPerformed(evt);
            }
        });
        m_variables.add(m_char);

        m_bool.setText("bool");
        m_bool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_boolActionPerformed(evt);
            }
        });
        m_variables.add(m_bool);

        menu_insertar.add(m_variables);

        m_est_de_control.setText("Estructuras de Control");

        m_while.setText("while");
        m_est_de_control.add(m_while);

        m_dowhile.setText("do-while");
        m_dowhile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_dowhileActionPerformed(evt);
            }
        });
        m_est_de_control.add(m_dowhile);

        m_if.setText("if");
        m_if.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_ifActionPerformed(evt);
            }
        });
        m_est_de_control.add(m_if);

        m_iselse.setText("if-else");
        m_iselse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_iselseActionPerformed(evt);
            }
        });
        m_est_de_control.add(m_iselse);

        m_for.setText("for");
        m_for.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_forActionPerformed(evt);
            }
        });
        m_est_de_control.add(m_for);

        jMenuItem1.setText("for x2");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        m_est_de_control.add(jMenuItem1);

        m_switchcase.setText("switch-case");
        m_switchcase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_switchcaseActionPerformed(evt);
            }
        });
        m_est_de_control.add(m_switchcase);

        m_printf.setText("printf(\"\");");
        m_printf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_printfActionPerformed(evt);
            }
        });
        m_est_de_control.add(m_printf);

        m_scanf.setText("scanf(\"\");");
        m_scanf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_scanfActionPerformed(evt);
            }
        });
        m_est_de_control.add(m_scanf);

        m_systemcls.setText("system(\"cls\");");
        m_systemcls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_systemclsActionPerformed(evt);
            }
        });
        m_est_de_control.add(m_systemcls);

        m_systempause.setText("system(\"pause\");");
        m_systempause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_systempauseActionPerformed(evt);
            }
        });
        m_est_de_control.add(m_systempause);

        m_getche.setText("getche();");
        m_getche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_getcheActionPerformed(evt);
            }
        });
        m_est_de_control.add(m_getche);

        menu_insertar.add(m_est_de_control);
        menu_insertar.add(jSeparator18);

        m_cierre_met_main.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        m_cierre_met_main.setText("Cierre de la funci√≥n main");
        m_cierre_met_main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_cierre_met_mainActionPerformed(evt);
            }
        });
        menu_insertar.add(m_cierre_met_main);
        menu_insertar.add(jSeparator14);

        m_cod_pre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/envelope--plus.png"))); // NOI18N
        m_cod_pre.setText("Crear codificaci√≥n predise√±ada");

        m_cod_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/document-text.png"))); // NOI18N
        m_cod_1.setText("Codificaci√≥n 1: B√°sica");
        m_cod_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_cod_1ActionPerformed(evt);
            }
        });
        m_cod_pre.add(m_cod_1);

        m_cod_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/document-text.png"))); // NOI18N
        m_cod_2.setText("Codficac√≠on 2:  B√°sica + printf");
        m_cod_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_cod_2ActionPerformed(evt);
            }
        });
        m_cod_pre.add(m_cod_2);

        m_cod_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/document-text.png"))); // NOI18N
        m_cod_3.setText("Codificac√≠on 3:  MENU");
        m_cod_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_cod_3ActionPerformed(evt);
            }
        });
        m_cod_pre.add(m_cod_3);

        menu_insertar.add(m_cod_pre);

        menu_aplicacion.add(menu_insertar);

        menu_ejecutar.setMnemonic('j');
        menu_ejecutar.setText("Ejecutar");

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/status.png"))); // NOI18N
        jMenuItem7.setText("Compilar c√≥digo");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        menu_ejecutar.add(jMenuItem7);

        m_complilar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, 0));
        m_complilar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/play_green.png"))); // NOI18N
        m_complilar.setText("Compilar y ejecutar c√≥digo");
        m_complilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_complilarActionPerformed(evt);
            }
        });
        menu_ejecutar.add(m_complilar);
        menu_ejecutar.add(jSeparator16);

        m_ejecutar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        m_ejecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/play_blue.png"))); // NOI18N
        m_ejecutar.setText("Ejecutar");
        m_ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_ejecutarActionPerformed(evt);
            }
        });
        menu_ejecutar.add(m_ejecutar);

        menu_aplicacion.add(menu_ejecutar);

        jMenu3.setText("Opciones");

        jMenuItem17.setText("Editar colores");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem17);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/temas.gif"))); // NOI18N
        jMenu2.setText("Apariencia");

        jMenuItem14.setText("Solaris");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem14);

        jMenuItem15.setText("Java");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem15);

        jMenuItem16.setText("Nimbus");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem16);

        jMenuItem11.setText("Sistema operativo actual");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem11);

        jMenuItem12.setText("Cambiar...");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jMenu3.add(jMenu2);
        jMenu3.add(jSeparator30);

        menuCambiarClave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/llave.png"))); // NOI18N
        menuCambiarClave.setText("Cambiar Contrase√±a");
        menuCambiarClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCambiarClaveActionPerformed(evt);
            }
        });
        jMenu3.add(menuCambiarClave);

        menu_aplicacion.add(jMenu3);

        jMenu4.setText("Ejercicios");
        jMenu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu4ActionPerformed(evt);
            }
        });

        menuVerificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/server.png"))); // NOI18N
        menuVerificar.setText("Verificar ejercicios en el servidor");
        menuVerificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuVerificarActionPerformed(evt);
            }
        });
        jMenu4.add(menuVerificar);

        menuSubir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/upload.png"))); // NOI18N
        menuSubir.setText("Subir Ejercicios");
        menuSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSubirActionPerformed(evt);
            }
        });
        jMenu4.add(menuSubir);

        menu_aplicacion.add(jMenu4);

        jMenu6.setText("Chat");
        jMenu6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu6ActionPerformed(evt);
            }
        });

        menuChat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/chat.png"))); // NOI18N
        menuChat.setText("Iniciar JCHAT");
        menuChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuChatActionPerformed(evt);
            }
        });
        jMenu6.add(menuChat);

        menu_aplicacion.add(jMenu6);

        jMenu5.setText("Ayuda");

        jMenuItem18.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ayuda.png"))); // NOI18N
        jMenuItem18.setText("Ayuda de JEDI-C (Lenguaje C)");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem18);

        jMenuItem21.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ayuda.png"))); // NOI18N
        jMenuItem21.setText("Ayuda de Contenidos");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem21);

        menuItemAcercaDe.setText("Acerca de...");
        jMenu5.add(menuItemAcercaDe);

        menu_aplicacion.add(jMenu5);

        setJMenuBar(menu_aplicacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(barra_herramientas, javax.swing.GroupLayout.DEFAULT_SIZE, 881, Short.MAX_VALUE)
            .addComponent(jSplitPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(barra_herramientas, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void m_stdioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_stdioActionPerformed
        codigos.get(index).insertarEnCodigo("#include <stdio.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_stdioActionPerformed

    private void m_stdlibActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_stdlibActionPerformed
        codigos.get(index).insertarEnCodigo("#include <stdlib.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_stdlibActionPerformed

    private void m_mathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_mathActionPerformed
        codigos.get(index).insertarEnCodigo("#include <math.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_mathActionPerformed

    private void m_stringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_stringActionPerformed
        codigos.get(index).insertarEnCodigo("#include <string.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_stringActionPerformed

    private void m_conioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_conioActionPerformed
        codigos.get(index).insertarEnCodigo("#include <conio.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);

    }//GEN-LAST:event_m_conioActionPerformed

    private void m_ctypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_ctypeActionPerformed
        codigos.get(index).insertarEnCodigo("#include <ctype.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_ctypeActionPerformed

    private void m_shortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_shortActionPerformed
        codigos.get(index).insertarVariablesDeMenu("short", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_shortActionPerformed

    private void m_intActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_intActionPerformed
        codigos.get(index).insertarVariablesDeMenu("int", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_intActionPerformed

    private void m_longActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_longActionPerformed
        codigos.get(index).insertarVariablesDeMenu("long", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_longActionPerformed

    private void m_floatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_floatActionPerformed
        codigos.get(index).insertarVariablesDeMenu("float", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_floatActionPerformed

    private void m_doubleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_doubleActionPerformed
        codigos.get(index).insertarVariablesDeMenu("double", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_doubleActionPerformed

    private void m_charActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_charActionPerformed
        codigos.get(index).insertarVariablesDeMenu("char", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_charActionPerformed

    private void m_boolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_boolActionPerformed
        codigos.get(index).insertarVariablesDeMenu("bool", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_boolActionPerformed

    private void m_whileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_whileActionPerformed
        codigos.get(index).insertarEnCodigo(Codigo.WHILES, areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_whileActionPerformed

    private void m_dowhileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_dowhileActionPerformed
        codigos.get(index).insertarEnCodigo(Codigo.DO_WHILES, areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_dowhileActionPerformed

    private void m_ifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_ifActionPerformed
        codigos.get(index).insertarEnCodigo(Codigo.IFS, areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_ifActionPerformed

    private void m_iselseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_iselseActionPerformed
        codigos.get(index).insertarEnCodigo(Codigo.IF_ELSES, areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_iselseActionPerformed

    private void m_forActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_forActionPerformed
        insertarFor();
    }//GEN-LAST:event_m_forActionPerformed

    private void m_switchcaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_switchcaseActionPerformed
        insertarSwitchCase();
    }//GEN-LAST:event_m_switchcaseActionPerformed

    private void m_printfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_printfActionPerformed
        codigos.get(index).insertarEnCodigo(Codigo.PRINTF, areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_printfActionPerformed

    private void m_scanfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_scanfActionPerformed
        codigos.get(index).insertarEnCodigo(Codigo.SCANF, areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_scanfActionPerformed

    private void m_systemclsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_systemclsActionPerformed
        codigos.get(index).insertarEnCodigo(Codigo.SYSTEM_CLS, areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_systemclsActionPerformed

    private void m_systempauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_systempauseActionPerformed
        codigos.get(index).insertarEnCodigo(Codigo.SYSTEM_PAUSE, areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_systempauseActionPerformed

    private void m_getcheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_getcheActionPerformed
        codigos.get(index).insertarEnCodigo(Codigo.GETCHE, areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_getcheActionPerformed

    private void m_ini_met_mainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_ini_met_mainActionPerformed
        codigos.get(index).insertarEnCodigo(Codigo.COMIEZO_MAIN, areas.get(index), m_ejecutar, m_guardar, tabconte);
    }//GEN-LAST:event_m_ini_met_mainActionPerformed

    private void m_cierre_met_mainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_cierre_met_mainActionPerformed
        codigos.get(index).insertarEnCodigo(Codigo.FIN_MAIN, areas.get(index), m_ejecutar, m_guardar, tabconte);
        if (codigos.get(index).getContadorFunciones() != 0) {
        }
    }//GEN-LAST:event_m_cierre_met_mainActionPerformed

    private void m_cod_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_cod_1ActionPerformed
        insertarCodigoPredise√±ado1();
    }//GEN-LAST:event_m_cod_1ActionPerformed

    private void m_cod_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_cod_2ActionPerformed
        insertarCodigoPredise√±ado2();
    }//GEN-LAST:event_m_cod_2ActionPerformed

    private void m_cod_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_cod_3ActionPerformed
        insertarCodigoPredise√±ado3();
    }//GEN-LAST:event_m_cod_3ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        abrir();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void m_nueva_codificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_nueva_codificacionActionPerformed
        index = codigos.size();
        crearNuevaCodificacion(index);
    }//GEN-LAST:event_m_nueva_codificacionActionPerformed

    private void m_guardar_comoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_guardar_comoActionPerformed
        if (tabconte.getTabCount() != 0) {
            guardarComo();
        }
    }//GEN-LAST:event_m_guardar_comoActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try {
            cerrarSesion();
        } catch (ParserConfigurationException | SAXException | IOException |  TransformerException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        if (tabconte.getTabCount() != 0) {
            setClipboard(codigos.get(index).getCodigo());
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        if (tabconte.getTabCount() != 0) {
            if (tabconte.getTabCount() != 0) {
                if (Mensaje.preguntaSiNo("¬øRealmente desea Borrar TODA la codificaci√≥n?") == Mensaje.SI) {
                    codigos.get(index).borrarCodigo(true, areas.get(index));
                    Mensaje.informacion("Codificaci√≥n Borrada. Puede construir una codificaci√≥n nueva");
                }
            }
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void m_complilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_complilarActionPerformed
        if (tabconte.getTabCount() != 0) {
            guardar();
            codigos.get(index).compilar(m_ejecutar, m_guardar, true, salerrores);
        }
    }//GEN-LAST:event_m_complilarActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        if (tabconte.getTabCount() != 0) {
            guardar();
            codigos.get(index).compilar(m_ejecutar, m_guardar, false, salerrores);
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void m_ejecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_ejecutarActionPerformed
        if (tabconte.getTabCount() != 0) {
            ejecutarArchivo();
        }
    }//GEN-LAST:event_m_ejecutarActionPerformed

    private void m_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_guardarActionPerformed
        codigos.get(index).guardar(m_guardar);
        codigos.get(index).setNombre(codigos.get(index).getPathConExtension(), true);
        tabconte.setTitleAt(tabconte.getSelectedIndex(), codigos.get(index).getNombre());
    }//GEN-LAST:event_m_guardarActionPerformed

    private void cbo_var_forActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_var_forActionPerformed
        String indice = cbo_var_for.getSelectedItem().toString();
        label_var_for.setText("; " + indice);
        label_var_for_2.setText(" ; " + indice + " = " + indice + " ");
    }//GEN-LAST:event_cbo_var_forActionPerformed

    private void btn_ins_forActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ins_forActionPerformed
        f1.setVar(cbo_var_for.getSelectedItem().toString());
        f1.setValorInicial(valor_variable_for.getText().trim());
        f1.setIntermedio(intermedio.getSelectedItem().toString());
        f1.setValorLlegada(valor_llegada.getText().trim());
        f1.setIncremento(cbofor.getSelectedItem().toString() + " " + valor_incremento.getText().trim());

        codigos.get(index).setFor(f1);
        codigos.get(index).insertarEnCodigo(codigos.get(index).getFor(), areas.get(index), m_ejecutar, m_guardar, tabconte);
        limpiarFormFor();
        form_for.setVisible(false);
    }//GEN-LAST:event_btn_ins_forActionPerformed

    private void cbo_var_for1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_var_for1ActionPerformed
        String indice = cbo_var_for1.getSelectedItem().toString();
        label_var_for1.setText("; " + indice);
        label_var_for_3.setText(" ; " + indice + " = " + indice + " ");
    }//GEN-LAST:event_cbo_var_for1ActionPerformed

    private void btn_ins_for1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ins_for1ActionPerformed
        f1.setVar(cbo_var_for1.getSelectedItem().toString());
        f1.setValorInicial(valor_variable_for1.getText().trim());
        f1.setIntermedio(intermedio1.getSelectedItem().toString());
        f1.setValorLlegada(valor_llegada1.getText().trim());
        f1.setIncremento(cbofor1.getSelectedItem().toString() + " " + valor_incremento1.getText().trim());

        f2.setVar(cbo_var_for2.getSelectedItem().toString());
        f2.setValorInicial(valor_variable_for2.getText().trim());
        f2.setIntermedio(intermedio2.getSelectedItem().toString());
        f2.setValorLlegada(valor_llegada2.getText().trim());
        f2.setIncremento(cbofor2.getSelectedItem().toString() + " " + valor_incremento2.getText().trim());

        codigos.get(index).setForsx2(f1, f2);
        codigos.get(index).insertarEnCodigo(codigos.get(index).getForsx2(), areas.get(index), m_ejecutar, m_guardar, tabconte);
        limpiarFormForx2();
        form_for2.setVisible(false);
    }//GEN-LAST:event_btn_ins_for1ActionPerformed

    private void cbo_var_for2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_var_for2ActionPerformed
        String indice = cbo_var_for2.getSelectedItem().toString();
        label_var_for2.setText("; " + indice);
        label_var_for_4.setText(" ; " + indice + " = " + indice + " ");
    }//GEN-LAST:event_cbo_var_for2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        insertarFor2();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void form_forComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_form_forComponentResized
        obtenerSize(form_for);
    }//GEN-LAST:event_form_forComponentResized

    private void form_for2ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_form_for2ComponentResized
        obtenerSize(form_for2);
    }//GEN-LAST:event_form_for2ComponentResized

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        jSplitPane2.setDividerLocation(380 + (this.getHeight() - 600));
//        splitIzquierdo.setDividerLocation(100 + (this.getHeight() - 600));
    }//GEN-LAST:event_formComponentResized

    private void btn_nue_barraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nue_barraActionPerformed
        index = codigos.size();
//        System.out.println("index="+index);
        crearNuevaCodificacion(index);
    }//GEN-LAST:event_btn_nue_barraActionPerformed

    private void btn_abr_barraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_abr_barraActionPerformed
        abrir();
    }//GEN-LAST:event_btn_abr_barraActionPerformed

    private void btn_gua_barraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gua_barraActionPerformed
        if (tabconte.getTabCount() != 0) {
            guardar();
        }
    }//GEN-LAST:event_btn_gua_barraActionPerformed

    private void btn_cop_barraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cop_barraActionPerformed
        if (tabconte.getTabCount() != 0) {
            setClipboard(codigos.get(index).getCodigo());
        }
    }//GEN-LAST:event_btn_cop_barraActionPerformed

    private void btn_bor_barraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bor_barraActionPerformed
        if (tabconte.getTabCount() != 0) {
            if (Mensaje.preguntaSiNo("¬øRealmente desea Borrar TODA la codificaci√≥n?") == Mensaje.SI) {
                codigos.get(index).borrarCodigo(true, areas.get(index));

                Mensaje.informacion("Codificaci√≥n Borrada. Puede construir una codificaci√≥n nueva");
            }
        }

    }//GEN-LAST:event_btn_bor_barraActionPerformed

    private void btn_compi_barraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_compi_barraActionPerformed
        if (tabconte.getTabCount() != 0) {
            Codigo c = codigos.get(index);
            if (c.getPathConExtension() == null) {
                guardarComo();
            } else if (!c.codigoGuardado()) {
                guardar();
            }
            if (Mensaje.OPCION != Mensaje.CANCELAR) {
                c.compilar(m_ejecutar, m_guardar, false, salerrores);
            }
        }

    }//GEN-LAST:event_btn_compi_barraActionPerformed

    private void btn_ejecom_barraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ejecom_barraActionPerformed
        new Thread(new Runnable() {

            @Override
            public void run() {
                if (tabconte.getTabCount() != 0) {
                    Codigo c = codigos.get(index);
                    if (c.getPathConExtension() == null) {
                        guardarComo();
                    } else if (!c.codigoGuardado()) {
                        guardar();
                    }
                    if (Mensaje.OPCION != Mensaje.CANCELAR) {
                        c.compilar(m_ejecutar, m_guardar, true, salerrores);
                    }
                }
            }
        }).start();
        
    }//GEN-LAST:event_btn_ejecom_barraActionPerformed

    private void btn_copsel_barraMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_copsel_barraMouseReleased
    }//GEN-LAST:event_btn_copsel_barraMouseReleased

    private void btn_peg_barraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_peg_barraActionPerformed
        if (tabconte.getTabCount() != 0) {
            codigos.get(index).setIndice(areas.get(index).getSelectionStart());
            try {
                getClipboard();
            } catch (UnsupportedFlavorException ex) {
            }
        }

    }//GEN-LAST:event_btn_peg_barraActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        if (tabconte.getTabCount() != 0) {
            if (areas.get(index).getSelectionStart() != areas.get(index).getSelectionEnd()) {
                this.setClipboard(areas.get(index).getSelectedText());
            } else {
                Mensaje.warning("Debe seleccionar el texto que desea copiar");
            }
        }

    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void m_guardarActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_guardarActionPerformed1
        if (tabconte.getTabCount() != 0) {
            guardar();
        }
    }//GEN-LAST:event_m_guardarActionPerformed1

    private void btn_copsel_barraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_copsel_barraActionPerformed
        if (tabconte.getTabCount() != 0) {
            if (areas.get(index).getSelectionStart() != areas.get(index).getSelectionEnd()) {
                this.setClipboard(areas.get(index).getSelectedText());
            } else {
                Mensaje.warning("Debe seleccionar el texto que desea copiar");
            }
        }


    }//GEN-LAST:event_btn_copsel_barraActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if (tabconte.getTabCount() != 0) {
            codigos.get(index).setIndice(areas.get(index).getSelectionStart());
            try {
                getClipboard();
            } catch (UnsupportedFlavorException ex) {
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            cerrarSesion();
        } catch (ParserConfigurationException | SAXException | IOException | TransformerException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        if (tabconte.getTabCount() != 0) {
            Impresora ip = new Impresora();
            ip.imprimir(codigos.get(index).getCodigo());
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (tabconte.getTabCount() != 0) {
            Impresora ip = new Impresora();
            ip.imprimir(codigos.get(index).getCodigo());
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        codigos.get(index).insertarEnCodigo("main(){\n\n}", areas.get(index), m_ejecutar, m_guardar, tabconte);
        //actualizarLineas();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        darleCuerpoAFunciones();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void btn_ins_funActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ins_funActionPerformed
        insertarFuncion();
}//GEN-LAST:event_btn_ins_funActionPerformed

    private void txt_par_funKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_par_funKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            insertarFuncion();
        }
}//GEN-LAST:event_txt_par_funKeyPressed

    private void txt_par_funMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_par_funMousePressed
        if (this.txt_par_fun.getText().equalsIgnoreCase("Ej :int n1, int n2, int n3")
                && txt_par_fun.isEnabled()) {
            txt_par_fun.setForeground(Color.BLACK);
            txt_par_fun.setHorizontalAlignment(JTextField.LEFT);
            txt_par_fun.setText("");
        }
}//GEN-LAST:event_txt_par_funMousePressed

    private void txt_nom_funKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nom_funKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_par_fun.setText("");
            txt_par_fun.setHorizontalAlignment(JTextField.LEFT);
            txt_par_fun.requestFocus();
        }
}//GEN-LAST:event_txt_nom_funKeyPressed

    private void btn_ins_varActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ins_varActionPerformed
        codigos.get(index).setVariables(txt_var.getText().trim());
        if (!u.hayErrores(this, codigos.get(index).getVariables(), "Nombre de Variable: ") && !txt_var.getText().equalsIgnoreCase("Ej: var1, var2 = 1, ... varN")) {
            insertarVariables();
        }
}//GEN-LAST:event_btn_ins_varActionPerformed

    private void txt_varKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_varKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            codigos.get(index).setVariables(txt_var.getText().trim());
            if (!u.hayErrores(this, codigos.get(index).getVariables(), "Nombre de Variable: ")) {
                insertarVariables();
                btn_ins_var.requestFocus();
            }
        }
}//GEN-LAST:event_txt_varKeyPressed

    private void txt_varMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_varMousePressed
        if (this.txt_var.getText().equalsIgnoreCase("Ej: var1, var2 = 1, ... varN")
                && txt_var.isEnabled()) {
            txt_var.setForeground(Color.BLACK);
            txt_var.setHorizontalAlignment(JTextField.LEFT);
            txt_var.setText("");
        }
}//GEN-LAST:event_txt_varMousePressed

    private void txt_casesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_casesKeyReleased
        int n;
        try {
            n = Integer.parseInt(txt_cases.getText());
        } catch (NumberFormatException e) {
            if (evt.getKeyCode() != KeyEvent.VK_ENTER) {
                Mensaje.error("Error", "Solo se aceptan N√∫meros");
                txt_cases.setText("");
                txt_cases.requestFocus();
            }
        }
}//GEN-LAST:event_txt_casesKeyReleased

    private void txt_casesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_casesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int n = Integer.parseInt(txt_cases.getText().trim());
            codigos.get(index).insertarSwitchCase(n, false, txt_cases, areas.get(index), m_ejecutar, m_guardar, tabconte);
        }
}//GEN-LAST:event_txt_casesKeyPressed

    private void btn_switchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_switchActionPerformed
        int n = Integer.parseInt(txt_cases.getText().trim());
        codigos.get(index).insertarSwitchCase(n, false, txt_cases, areas.get(index), m_ejecutar, m_guardar, tabconte);
}//GEN-LAST:event_btn_switchActionPerformed

    private void txtlibFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtlibFocusLost
        txtlib.setHorizontalAlignment(JTextField.CENTER);
        txtlib.setText("Aqu√≠ su Librer√≠a");
        txtlib.setForeground(Color.gray);
}//GEN-LAST:event_txtlibFocusLost

    private void txtlibActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlibActionPerformed
        String lib = txtlib.getText().trim();
        if (!lib.equalsIgnoreCase("")) {
            if (!u.contienePalabraReservada(lib)) {
                codigos.get(index).insertarEnCodigo("#include \"" + lib + ".h\"", areas.get(index), m_ejecutar, m_guardar, tabconte);
                txtlib.setText("");
                Mensaje.warning("Nombre de Librer√≠a Incorrecto: Posee una palabra reservada");
                txtlib.setText("");
                txtlib.requestFocus();
            }
        } else {
            Mensaje.warning("Debe Ingresar alguna Librer√≠a");
            txtlib.setText("");
            txtlib.requestFocus();
        }
}//GEN-LAST:event_txtlibActionPerformed

    private void txtlibMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtlibMousePressed
        if (txtlib.getText().equalsIgnoreCase("aqu√≠ su librer√≠a")) {
            txtlib.setForeground(Color.BLACK);
            txtlib.setText("");
        }
}//GEN-LAST:event_txtlibMousePressed

    private void txtlibMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtlibMouseClicked
        if (txtlib.getText().equalsIgnoreCase("aqu√≠ su librer√≠a")) {
            txtlib.setForeground(Color.BLACK);
            txtlib.setText("");
        }
}//GEN-LAST:event_txtlibMouseClicked

    private void btn_ins_libActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ins_libActionPerformed
        boolean lib = false;

        if (this.stdio.isSelected()) {
            codigos.get(index).insertarLibreria("stdio.h");
            lib = true;
        }
        if (this.stdlib.isSelected()) {
            codigos.get(index).insertarLibreria("stdlib.h");
            lib = true;
        }
        if (this.math.isSelected()) {
            codigos.get(index).insertarLibreria("math.h");
            lib = true;
        }
        if (this.string.isSelected()) {
            codigos.get(index).insertarLibreria("string.h");
            lib = true;
        }
        if (this.conio.isSelected()) {
            codigos.get(index).insertarLibreria("conio.h");
            lib = true;
        }
        if (this.ctype.isSelected()) {
            codigos.get(index).insertarLibreria("ctype.h");
            lib = true;
        }

        if (lib) {
//            if(tabconte == null){
//                    System.out.println("tabconte null");
//            }
            codigos.get(index).insertarEnCodigo(codigos.get(index).getLibrerias(), areas.get(index), m_ejecutar, m_guardar, tabconte);
            codigos.get(index).borrarLibrerias();
            codigos.get(index).setContadorLibrerias(0);

        } else {
            Mensaje.warning("Debe seleccionar alguna Librer√≠a");
        }
    }//GEN-LAST:event_btn_ins_libActionPerformed

    private void opPantallaCompletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opPantallaCompletaActionPerformed
        if (!opPantallaCompleta.isSelected()) {
            this.setVisible(true);
            this.setBounds(0, 0, width, height);
            this.setLocationRelativeTo(null);
            this.dispose();
            this.setUndecorated(false);
            this.setVisible(true);
        } else {
            width = this.getWidth();
            height = this.getHeight();
            Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
            int ALTO_PANTALLA = (int) d.getHeight();
            int ANCHO_PANTALLA = (int) d.getWidth();
            this.setVisible(false);
            this.setBounds(0, 0, ANCHO_PANTALLA, ALTO_PANTALLA);
            this.dispose();
            this.setUndecorated(true);
            this.setVisible(true);
        }
    }//GEN-LAST:event_opPantallaCompletaActionPerformed

    private void formInicioWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formInicioWindowClosing
        Historial.addHistorialGeneral("Se termin√≥ la ejecuci√≥n del sistema JEDIC Alumno");
        System.exit(0);
    }//GEN-LAST:event_formInicioWindowClosing

    private void btnIniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarSesionActionPerformed
        iniciarSesion();
    }//GEN-LAST:event_btnIniciarSesionActionPerformed

    private void btnVerificarEjerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerificarEjerActionPerformed
        verEjercicio();
    }//GEN-LAST:event_btnVerificarEjerActionPerformed

    private void btnDescargarEjercicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarEjercicioActionPerformed
        try {
            LMEjercicioProfesor model = (LMEjercicioProfesor) listaEjercicios.getModel();
            EjercicioProfesor ejercicio = (EjercicioProfesor) model.getElementAt(listaEjercicios.getSelectedIndex());
            Historial.addHistorial("Descarg√≥ un ejercicio: [ejercicio=" + ejercicio.getNombreEjercicio() + ", "
                    + "descripci√≥n=" + ejercicio.getDescripcion() + "]");
            Alumno.EJERCICIO = ejercicio;
            index = codigos.size();
            crearNuevaCodificacion(index);
            (codigos.get(index)).borrarCodigo(false, areas.get(index));

            File temp = new File(Rutas.CARPETA_TEMP);
            if (!temp.exists()) {
                temp.mkdir();
            }

            temp = new File(Rutas.CARPETA_TEMP + File.separator + Rutas.ARCHIVO_TEMP);

            if (!temp.exists()) {
                temp.createNewFile();
            }

            descargarEjercicioProfesor(Alumno.EJERCICIO.getCodigo(), temp);
            String ejeStr = Archivo.leerArchivo(temp.getPath());
            areas.get(index).setText("/*\n" + ejeStr + "\n*/");

            cambiarEstadoDeEjercicioEnXml(ejercicio);

            formBajar.setVisible(false);
        } catch (IOException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDescargarEjercicioActionPerformed

    private void btnSubirEjerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirEjerActionPerformed
        if(Mensaje.preguntaSiNo("¬øRealmente desea enviar el ejercicio?") == Mensaje.SI){
            subirEjercicio();
        }
    }//GEN-LAST:event_btnSubirEjerActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        cambiarTema(Temas.MOTIF);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        cambiarTema(Temas.METAL);
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        cambiarTema(Temas.NIMBUS);
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void lisTemaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lisTemaMouseReleased
        cambiarTemaSubstance(lisTema.getSelectedValue().toString());
    }//GEN-LAST:event_lisTemaMouseReleased

    private void lisTemaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lisTemaKeyReleased
        cambiarTemaSubstance(lisTema.getSelectedValue().toString());
    }//GEN-LAST:event_lisTemaKeyReleased

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        this.formTemas.setVisible(false);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void listaEstMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaEstMouseReleased
        if (evt.getClickCount() == 2) {
            String opcion = listaEst.getSelectedValue().toString();
            switch (opcion) {
                case "while":
                    codigos.get(index).insertarEnCodigo(Codigo.WHILES, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "do-while":
                    codigos.get(index).insertarEnCodigo(Codigo.DO_WHILES, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "if-else":
                    codigos.get(index).insertarEnCodigo(Codigo.IF_ELSES, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "scanf(\"\");":
                    codigos.get(index).insertarEnCodigo(Codigo.SCANF, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "printf(\"\");":
                    codigos.get(index).insertarEnCodigo(Codigo.PRINTF, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "if":
                    codigos.get(index).insertarEnCodigo(Codigo.IFS, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "for":
                    insertarFor();
                    break;
                case "for x2":
                    insertarFor2();
                    break;
                case "system(\"cls\");":
                    codigos.get(index).insertarEnCodigo(Codigo.SYSTEM_CLS, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "getche();":
                    codigos.get(index).insertarEnCodigo(Codigo.GETCHE, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "system(\"pause\");":
                    codigos.get(index).insertarEnCodigo(Codigo.SYSTEM_PAUSE, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "Estructura de Men√∫":
                    codigos.get(index).insertarMenu(txt_cases, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
            }
        }
    }//GEN-LAST:event_listaEstMouseReleased

    private void chkLineasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkLineasActionPerformed
        setLineasVisibles(chkLineas.isSelected() ? true : false);
    }//GEN-LAST:event_chkLineasActionPerformed

    private void op3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op3ActionPerformed
        agregarTipoAlaLista(op3, Colores.COMENTARIO);
}//GEN-LAST:event_op3ActionPerformed

    private void op4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op4ActionPerformed
        agregarTipoAlaLista(op4, Colores.PALABRA_RESERVADA);
}//GEN-LAST:event_op4ActionPerformed

    private void op5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op5ActionPerformed
        agregarTipoAlaLista(op5, Colores.FUNCIONES);
}//GEN-LAST:event_op5ActionPerformed

    private void op6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op6ActionPerformed
        agregarTipoAlaLista(op6, Colores.CADENAS_Y_NUMEROS);
}//GEN-LAST:event_op6ActionPerformed

    private void op7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op7ActionPerformed
        agregarTipoAlaLista(op7, Colores.TIPOS_DE_DATOS);
}//GEN-LAST:event_op7ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        SyntaxScheme scheme;
        boolean fondoSeleccionado = false;
        boolean colorCodigo = false;
        boolean lineaSeleccionada = false;

        if (op8.isSelected()) {
            fondoSeleccionado = true;
        }
        if (op9.isSelected()) {
            colorCodigo = true;
        }
        if (op10.isSelected()) {
            lineaSeleccionada = true;
        }

        if (tabconte.getTabCount() != 0) {
            for (int i = 0; i < tabconte.getTabCount(); i++) {
                if (fondoSeleccionado) {
                    areas.get(i).setBackground(selector.getColor());
                    Colores.FONDO_COLOR = selector.getColor();
                }
                if (colorCodigo) {
                    areas.get(i).setForeground(selector.getColor());
                    Colores.CODIGO_COLOR = selector.getColor();
                }
                if (lineaSeleccionada) {
                    areas.get(i).setCurrentLineHighlightColor(selector.getColor());
                    Colores.LINEA_COLOR = selector.getColor();
                }

                for (int j = 0; j < tipo.size(); j++) {
                    scheme = areas.get(i).getSyntaxScheme();
                    Colores.establecerColor(Integer.parseInt(tipo.get(j).toString()), scheme, selector.getColor());
                    areas.get(i).repaint();
                }
            }
        } else {
            if (fondoSeleccionado) {
                Colores.FONDO_COLOR = selector.getColor();
            }
            if (colorCodigo) {
                Colores.CODIGO_COLOR = selector.getColor();
            }
            if (lineaSeleccionada) {
                Colores.LINEA_COLOR = selector.getColor();
            }

            for (int j = 0; j < tipo.size(); j++) {
                Colores.establecerColor(Integer.parseInt(tipo.get(j).toString()), selector.getColor());
            }
        }
        ponerColoresEnLabels();
        borrarSeleccionDeOpciones();
}//GEN-LAST:event_jButton22ActionPerformed

    private void jPanel27MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel27MouseReleased
}//GEN-LAST:event_jPanel27MouseReleased

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        Redimensionar.redimensionarFormulario(formColores, false, "Editar Colores");
        formColores.setVisible(true);
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        for (int i = 0; i < tabconte.getTabCount(); i++) {
            areas.get(i).restoreDefaultSyntaxScheme();
            areas.get(i).repaint();
            areas.get(i).setBackground(Color.white);
            areas.get(i).setForeground(Color.black);
            areas.get(i).setCurrentLineHighlightColor(new Color(-86));
        }
        dejarColoresDefault();
        ponerColoresEnLabels();
    }//GEN-LAST:event_jButton21ActionPerformed

    private void op8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op8ActionPerformed
        agregarTipoAlaLista(op8, Colores.TIPOS_DE_DATOS);
    }//GEN-LAST:event_op8ActionPerformed

    private void nomAluKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomAluKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtpas.requestFocus();
        }
    }//GEN-LAST:event_nomAluKeyReleased

    private void txtpasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpasKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            iniciarSesion();
        }
    }//GEN-LAST:event_txtpasKeyReleased

    private void btnCmbConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCmbConActionPerformed
        cambiarContrase√±a();
}//GEN-LAST:event_btnCmbConActionPerformed

    private void btnCambiarClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarClaveActionPerformed
        formCambiarContrase√±a();
    }//GEN-LAST:event_btnCambiarClaveActionPerformed

    private void menuCambiarClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCambiarClaveActionPerformed
        formCambiarContrase√±a();
    }//GEN-LAST:event_menuCambiarClaveActionPerformed

    private void jMenu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu4ActionPerformed
//        verificarEjerciciosServidor();
//        Redimensionar.redimensionarFormulario(formBajar, false, "Ejercicios en el servidor");
//        Cambiar.iconoDeFormulario(formBajar, Rutas.ICONO_SERVIDOR);
//        formBajar.setVisible(true);
    }//GEN-LAST:event_jMenu4ActionPerformed

    private void menuSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSubirActionPerformed
        subirEjercicio();
    }//GEN-LAST:event_menuSubirActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        new Thread(new Runnable() {

            @Override
            public void run() {
                Ejecutar.ejecutarComando("\"ayuda" + P.SEPARADOR + "alumnos.CHM\"");
            }
        }).start();
        Historial.addHistorial("Se consult√≥ la ayuda del sistema");
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void con1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_con1KeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            con2.requestFocus();
        }
    }//GEN-LAST:event_con1KeyReleased

    private void con2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_con2KeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cambiarContrase√±a();
        }
    }//GEN-LAST:event_con2KeyReleased

    private void lblRecuperarClaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRecuperarClaveMouseEntered
        formInicio.setCursor(Cursor.HAND_CURSOR);
}//GEN-LAST:event_lblRecuperarClaveMouseEntered

    private void lblRecuperarClaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRecuperarClaveMouseExited
        formInicio.setCursor(Cursor.DEFAULT_CURSOR);
}//GEN-LAST:event_lblRecuperarClaveMouseExited

    private void lblRecuperarClaveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRecuperarClaveMouseReleased
        String nom_alu = nomAlu.getText().trim();

        if (nom_alu.equalsIgnoreCase("")) {
            MensajeHilo.setMensaje(lblMenSesion, "Debe escribir el nombre de usuario para poder recuperar su clave", Color.red, 7);
        } else if (!Conectividad.isConectado()) {
            MensajeHilo.setMensaje(lblMenSesion, "No posee Conexi√≥n a Internet. No puede Recuperar su Clave", Color.red, 7);
        } else {
            hp = new HiloRecuperarClave(lblMenSesion, lblMen);
            hp.setDatos("SELECT ema_alu, nom_alu, pas_alu, sysdate() as 'fecha' FROM alumno "
                    + "WHERE usu_alu = '" + nom_alu + "'", "ema_alu", "nom_alu", "pas_alu", "alumno", nom_alu);
            hp.start();
            hb = new HiloGif(hp, formBarra, lblMen);
            hb.start();
        }
}//GEN-LAST:event_lblRecuperarClaveMouseReleased

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        hp.interrupt();
        hb.interrupt();
        formBarra.setVisible(false);
}//GEN-LAST:event_jButton15ActionPerformed

private void menu_archivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_archivoActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_menu_archivoActionPerformed

private void btnChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChatActionPerformed
    if (!btnChat.getText().equalsIgnoreCase("Cancelar inicio de JChat")) {
        iniciarJChat();
    } else {
        cancelarInicioSesion();
    }
}//GEN-LAST:event_btnChatActionPerformed

private void jMenu6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu6ActionPerformed
}//GEN-LAST:event_jMenu6ActionPerformed

private void menuChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuChatActionPerformed
    if (!btnChat.getText().equalsIgnoreCase("Cancelar inicio de JChat")) {
        iniciarJChat();
    } else {
        cancelarInicioSesion();
    }

}//GEN-LAST:event_menuChatActionPerformed

    private void formBajarComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formBajarComponentResized

        System.out.println("W: " + formBajar.getWidth());
        System.out.println("H: " + formBajar.getHeight());
    }//GEN-LAST:event_formBajarComponentResized

    private void btnInboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInboxActionPerformed
        Historial.addHistorial("Ha entrado a revisar mensaje inbox");
//        List<MensajeInbox> mens = getMensajes();
        Collections.sort(mens, new clases.modelo.OrdenarFecha());
        mensajes.setModel(new LMMensajeInbox(mens));
        mensajes.setCellRenderer(new CRMensajeInbox());
        limpiarFormMensaje();
        formInbox.setBounds(0, 0, 868, 463);
        formInbox.setLocationRelativeTo(null);
        formInbox.setVisible(true);
    }//GEN-LAST:event_btnInboxActionPerformed

    private void formInboxComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formInboxComponentResized
        System.out.println(formInbox.getWidth() + "-" + formInbox.getHeight());
    }//GEN-LAST:event_formInboxComponentResized

    private void mensajesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mensajesMouseReleased
        if (evt.getClickCount() == 2) {
            int indice = mensajes.getSelectedIndex();
            MensajeInbox mi = (MensajeInbox) mensajes.getSelectedValue();
            mi.setLeido(true);
            marcarMensajeComoLeido(mi);
            mensajes.setModel(new LMMensajeInbox(((LMMensajeInbox) mensajes.getModel()).actualizarLista(mi)));
            mensajes.setSelectedIndex(indice);
            mostrarMensaje(mi);
        }
    }//GEN-LAST:event_mensajesMouseReleased

    private void listaFuncionesCMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaFuncionesCMouseReleased
        if (evt.getClickCount() == 2) {
            String opcion = listaFuncionesC.getSelectedValue().toString();
            switch (opcion) {
                case "while":
                    codigos.get(index).insertarEnCodigo(Codigo.WHILES, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "do-while":
                    codigos.get(index).insertarEnCodigo(Codigo.DO_WHILES, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "if-else":
                    codigos.get(index).insertarEnCodigo(Codigo.IF_ELSES, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "scanf(\"\");":
                    codigos.get(index).insertarEnCodigo(Codigo.SCANF, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "printf(\"\");":
                    codigos.get(index).insertarEnCodigo(Codigo.PRINTF, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "if":
                    codigos.get(index).insertarEnCodigo(Codigo.IFS, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "for":
                    insertarFor();
                    break;
                case "for x2":
                    insertarFor2();
                    break;
                case "system(\"cls\");":
                    codigos.get(index).insertarEnCodigo(Codigo.SYSTEM_CLS, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "getche();":
                    codigos.get(index).insertarEnCodigo(Codigo.GETCHE, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "system(\"pause\");":
                    codigos.get(index).insertarEnCodigo(Codigo.SYSTEM_PAUSE, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "system(\"sleep 5\");":
                    codigos.get(index).insertarEnCodigo(Codigo.SYSTEM_PAUSE_SLEEP, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
                case "Estructura de Men√∫":
                    codigos.get(index).insertarMenu(txt_cases, areas.get(index), m_ejecutar, m_guardar, tabconte);
                    break;
            }
        }
    }//GEN-LAST:event_listaFuncionesCMouseReleased

    private void menuVerificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuVerificarActionPerformed
        verEjercicio();
    }//GEN-LAST:event_menuVerificarActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        
       GUI.main(null);
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        Cambiar.iconoDeFormulario(formAyudaC, Rutas.ICONO_ARRIBA);
        this.formAyudaC.setBounds(0, 0, 408, 297);
        this.formAyudaC.setLocationRelativeTo(null);
        this.formAyudaC.setVisible(true);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void formAyudaCComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formAyudaCComponentResized
        System.out.println("w: "+this.formAyudaC.getWidth());
        System.out.println("w: "+this.formAyudaC.getHeight());
    }//GEN-LAST:event_formAyudaCComponentResized

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        cambiarTema(Temas.S_OPERATIVO_ACTUAL);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        Redimensionar.redimensionarFormulario(this.formTemas, false, "Apariencia");
        formTemas.setVisible(true);
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(final String args[]) {
        if (args.length > 0) {
            Rutas.RUTA_ABRIR = args[0];
        }
        try {
            JFrame.setDefaultLookAndFeelDecorated(true);
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }


        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                try {
                    new JedicAlumno().setVisible((args.length > 0 ? true : false));
                } catch (ParserConfigurationException | SAXException | ClassNotFoundException | SQLException | IOException ex) {
                    Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

    }

    public void estado(boolean e) {
        btn_ins_lib.setEnabled(!e);
//        txt_est.setEnabled(e);
//        nom_var_est.setEnabled(e);
        txt_nom_fun.setEnabled(e);
        txt_par_fun.setEnabled(e);
//        var_long.setSelected(!e);
//        fun_short.setSelected(!e);
        btn_switch.setEnabled(e);
        btn_ins_var.setEnabled(e);
//        est_long.setSelected(!e);
//        btn_ini_est.setEnabled(e);
//        btn_ins_var_est.setEnabled(e);
//        btn_cer_est.setEnabled(e);
        btn_ins_fun.setEnabled(e);
        txt_var.setEnabled(e);
        txt_cases.setEnabled(e);
        stdio.setSelected(!e);
//        op_est.setVisible(e);
        m_ini_met_main.setEnabled(e);
        m_cierre_met_main.setEnabled(e);
        m_variables.setEnabled(e);
        m_est_de_control.setEnabled(e);
        m_ejecutar.setEnabled(e);
        m_guardar.setEnabled(e);
    }

    public void setClipboard(String aString) {
        StringSelection stringSelection = new StringSelection(aString);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, stringSelection);
    }

    public void setiarToolTipText() {
        txtlib.setToolTipText("Para Insertar la Librer√≠a, Presione Enter");
        areas.get(index).setToolTipText("Puede modificar la Codificaci√≥n, S√≥lo editela");
    }

    /**
     *
     * @param nom String
     *
     * @return Retorna VERDADERO si el String tiene este formato "var1, var2,
     * var3" y retorna FALSO si el String tiene este formato: "var 1, var 2, var
     * 3", osea espacio entre los nombres
     */
//    public void iniciarEstructura() {
//        String nombre = txt_est.getText();
//
//        if (!nombre.trim().equalsIgnoreCase("")) {
//            if (!nombre.contains(" ")) {
//                if (!u.contienePalabraReservada(nombre)) {
//                    codigos.get(index).insertarEnCodigo(
//                            Codigo.INICIO_ESTRUCTURA + nombre + "{\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
//                    nom_var_est.requestFocus();
//                    txt_est.setText("");
//                    op_est.setText("struct " + nombre);
//                    op_est.setVisible(true);
//                } else {
//                    Mensaje.warning("El nombre de la Estructura posee una palabra reservada");
//                    txt_est.setText("");
//                    txt_est.requestFocus();
//                }
//            } else {
//                Mensaje.warning("El nombre de la estructura no puede contener espacios");
//                txt_est.setText("");
//                txt_est.requestFocus();
//            }
//        } else {
//            Mensaje.warning("La estructura debe tener un Nombre");
//            txt_est.setText("");
//            txt_est.requestFocus();
//        }
//    }

//    public void insertarVariableDeEstructura() {
//        String nombre, tipoVariable = "";
//        nombre = this.nom_var_est.getText();
//
//        if (!nombre.trim().equalsIgnoreCase("")) {
//            if (!nombre.contains(" ") || nombre.contains(", ")) {
//
//                if (u.variableEstaCorrecta(nombre)) {
//                    if (!u.contienePalabraReservada(nombre)) {
//                        if (this.est_bool.isSelected()) {
//                            tipoVariable = "bool ";
//                        }
//                        if (this.est_long.isSelected()) {
//                            tipoVariable = "long ";
//                        }
//                        if (this.est_int.isSelected()) {
//                            tipoVariable = "int ";
//                        }
//                        if (this.est_char.isSelected()) {
//                            tipoVariable = "char ";
//                        }
//                        if (this.est_float.isSelected()) {
//                            tipoVariable = "float ";
//                        }
//                        if (this.est_double.isSelected()) {
//                            tipoVariable = "double ";
//                        }
//                        if (this.est_short.isSelected()) {
//                            tipoVariable = "short ";
//                        }
//
//                        if (this.op_est.isSelected()) {
//                            tipoVariable = op_est.getText() + " ";
//                        }
//
//                        codigos.get(index).insertarEnCodigo("    " + tipoVariable + nombre + ";\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
//                        nom_var_est.setText("");
//                        nom_var_est.requestFocus();
//                        this.est_long.setSelected(true);
//                    } else {
//                        Mensaje.warning("En las variables, existe una palabra reservada");
//                        nom_var_est.setText("");
//                        nom_var_est.requestFocus();
//                    }
//
//                } else {
//                    Mensaje.warning("El nombre de la variable no puede contener espacios");
//                    nom_var_est.setText("");
//                    nom_var_est.requestFocus();
//                }
//            } else {
//                Mensaje.warning("El nombre de la variable no puede contener espacios");
//                nom_var_est.setText("");
//                nom_var_est.requestFocus();
//            }
//        } else {
//            Mensaje.warning("Debe ingresar alg√∫n nombre a la variable");
//            nom_var_est.setText("");
//            nom_var_est.requestFocus();
//        }
//
//    }

    public void insertarFuncion() {
        String tipoVariable, nombre, parametros, funcion;
        nombre = this.txt_nom_fun.getText().trim();
        parametros = this.txt_par_fun.getText().trim();
        if (!parametros.equalsIgnoreCase("Ej :int n1, int n2, int n3")) {
            if (!nombre.equalsIgnoreCase("")) {
                if (!nombre.contains(" ")) {
                    if (!u.contienePalabraReservada(nombre)) {
//                        if (this.fun_bool.isSelected()) {
//                            tipoVariable = "bool ";
//                        }
//                        if (this.fun_long.isSelected()) {
//                            tipoVariable = "long ";
//                        }
//                        if (this.fun_int.isSelected()) {
//                            tipoVariable = "int ";
//                        }
//                        if (this.fun_char.isSelected()) {
//                            tipoVariable = "char ";
//                        }
//                        if (this.fun_float.isSelected()) {
//                            tipoVariable = "float ";
//                        }
//                        if (this.fun_double.isSelected()) {
//                            tipoVariable = "double ";
//                        }
//                        if (this.fun_short.isSelected()) {
//                            tipoVariable = "short ";
//                        }
//                        if (this.fun_void.isSelected()) {
//                            tipoVariable = "void ";
//                        }

                        tipoVariable = cboTipoRetorno.getSelectedItem().toString();
                        funcion = "\n" + tipoVariable+ " " + nombre + "(" + parametros + ");";

                        codigos.get(index).insertarEnCodigo(funcion, areas.get(index), m_ejecutar, m_guardar, tabconte);

                        //sin punto y coma
                        codigos.get(index).setFuncion(codigos.get(index).getContadorFunciones(), "\n" + tipoVariable + nombre + "(" + parametros + ")");
                        codigos.get(index).setContadorFunciones(codigos.get(index).getContadorFunciones() + 1);
                        txt_nom_fun.setText("");

                        txt_par_fun.setHorizontalAlignment(JTextField.CENTER);
                        txt_par_fun.setText("Ej :int n1, int n2, int n3");
                        txt_par_fun.setForeground(Color.gray);
                        txt_nom_fun.requestFocus();
                    } else {
                        Mensaje.warning("Nombre de Funci√≥n Incorrecto: El nombre posee una palabra reservada");
                        txt_nom_fun.setText("");
                        txt_nom_fun.requestFocus();
                    }
                } else {
                    Mensaje.warning("Nombre de Funci√≥n Incorrecto: No debe Ingresar el nombre con espacios");
                    txt_nom_fun.setText("");
                    txt_nom_fun.requestFocus();
                }
            } else {
                Mensaje.warning("Nombre de Funci√≥n Incorrecto: Debe Ingresar alg√∫n nombre");
                txt_nom_fun.setText("");
                txt_nom_fun.requestFocus();
            }
        } else {
            Mensaje.warning("Parametros Incorrectos: Debe Ingresar alg√∫n parametro");
        }
    }

    public void insertarVariables() {
//        if (this.var_bool.isSelected()) {
//            codigos.get(index).setVariables("    bool " + codigos.get(index).getVariables());
//        }
//        if (this.var_long.isSelected()) {
//            codigos.get(index).setVariables("    long " + codigos.get(index).getVariables());
//        }
//        if (this.var_int.isSelected()) {
//            codigos.get(index).setVariables("    int " + codigos.get(index).getVariables());
//        }
//        if (this.var_char.isSelected()) {
//            codigos.get(index).setVariables("    char " + codigos.get(index).getVariables());
//        }
//        if (this.var_float.isSelected()) {
//            codigos.get(index).setVariables("    float " + codigos.get(index).getVariables());
//        }
//        if (this.var_double.isSelected()) {
//            codigos.get(index).setVariables("    double " + codigos.get(index).getVariables());
//        }
//        if (this.var_short.isSelected()) {
//            codigos.get(index).setVariables("    short " + codigos.get(index).getVariables());
//        }

        codigos.get(index).setVariables(cboTipoVariable.getSelectedItem().toString() +" "+ codigos.get(index).getVariables());
        codigos.get(index).insertarEnCodigo(codigos.get(index).getVariables() + ";\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        txt_var.setHorizontalAlignment(JTextField.CENTER);
        txt_var.setText("Ej: var1, var2 = 1, ... varN");
        txt_var.setForeground(Color.gray);
    }

    public void estadoBtnIniMain(boolean e) {
        m_ini_met_main.setEnabled(!e);
        m_variables.setEnabled(e);
        m_est_de_control.setEnabled(e);
        btn_ins_fun.setEnabled(!e);
        btn_switch.setEnabled(e);
        btn_ins_var.setEnabled(e);
        txt_var.setEnabled(e);
        txt_cases.setEnabled(e);
        m_ini_met_main.setEnabled(!e);
        m_variables.setEnabled(e);
        m_est_de_control.setEnabled(e);
    }

    public boolean salir() {
        while (!codigos.isEmpty()) {
            if (codigos.get(0).getNombre().contains("P√°gina de Inicio")) {
                removerTab(0);
            } else if (!(codigos.get(0).codigoGuardado())) {
                tabconte.setSelectedComponent(scrolls.get(0));
                if ((Mensaje.OPCION = Mensaje.preguntaSiNoCancelar("La Codificaci√≥n \"" + codigos.get(0).getNombre() + "\" a√∫n no se "
                        + "ha guardado, ¬øDesea Guardarla antes de Salir?")) == Mensaje.SI) {
                    if (codigos.get(0).getPathConExtension() == null) {
                        guardarComo();
                    } else {
                        codigos.get(0).guardar(m_guardar);
                    }
                    removerTab(0);
                } else if (Mensaje.OPCION == Mensaje.NO) {
                    removerTab(0);
                }
                if (Mensaje.OPCION == Mensaje.CANCELAR) {
                    return false;
                }
            } else {
//                System.out.println("codigo guardado: " + codigos.get(0).getNombre());
                removerTab(0);
            }
//            }
        }
        return true;
    }

    private void obtenerSize(javax.swing.JFrame form) {
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("width: " + form.getBounds().width);
        System.out.println("height: " + form.getBounds().height);
    }

    private void getClipboard() throws UnsupportedFlavorException {
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        Transferable transferable = clipboard.getContents(null);
        if (transferable.isDataFlavorSupported(DataFlavor.stringFlavor)) {
            try {
                if ((String) transferable.getTransferData(DataFlavor.stringFlavor) != null) {
                    codigos.get(index).insertarEnCodigo((String) transferable.getTransferData(DataFlavor.stringFlavor), areas.get(index), m_ejecutar, m_guardar, tabconte);
                    //actualizarLineas();
                }

            } catch (IOException ex) {
                Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            Mensaje.error("Lo que quiere copiar no es una Cadena de Texto");

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar barra_herramientas;
    private javax.swing.JButton btnCambiarClave;
    private javax.swing.JButton btnChat;
    private javax.swing.JButton btnCmbCon;
    private javax.swing.JButton btnDescargarEjercicio;
    private javax.swing.JButton btnInbox;
    private javax.swing.JButton btnIniciarSesion;
    private javax.swing.JButton btnSubirEjer;
    private javax.swing.JButton btnVerificarEjer;
    private javax.swing.JButton btn_abr_barra;
    private javax.swing.JButton btn_bor_barra;
    private javax.swing.JButton btn_compi_barra;
    private javax.swing.JButton btn_cop_barra;
    private javax.swing.JButton btn_copsel_barra;
    private javax.swing.JButton btn_ejecom_barra;
    private javax.swing.JButton btn_gua_barra;
    private javax.swing.JButton btn_ins_for;
    private javax.swing.JButton btn_ins_for1;
    private javax.swing.JButton btn_ins_fun;
    private javax.swing.JButton btn_ins_lib;
    private javax.swing.JButton btn_ins_var;
    private javax.swing.JButton btn_nue_barra;
    private javax.swing.JButton btn_peg_barra;
    private javax.swing.JButton btn_switch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cboTipoRetorno;
    private javax.swing.JComboBox cboTipoVariable;
    private javax.swing.JComboBox cbo_var_for;
    private javax.swing.JComboBox cbo_var_for1;
    private javax.swing.JComboBox cbo_var_for2;
    private javax.swing.JComboBox cbofor;
    private javax.swing.JComboBox cbofor1;
    private javax.swing.JComboBox cbofor2;
    private javax.swing.JCheckBox chkLineas;
    private javax.swing.JPasswordField con1;
    private javax.swing.JPasswordField con2;
    private javax.swing.JCheckBox conio;
    private javax.swing.JCheckBox ctype;
    public static javax.swing.JDialog dialogCompilacion;
    private javax.swing.ButtonGroup est;
    private javax.swing.JFrame formAyudaC;
    private javax.swing.JFrame formBajar;
    private javax.swing.JFrame formBarra;
    private javax.swing.JFrame formColores;
    private javax.swing.JFrame formContrase√±a;
    private javax.swing.JFrame formInbox;
    private javax.swing.JFrame formInicio;
    private javax.swing.JFrame formTemas;
    private javax.swing.JFrame form_for;
    private javax.swing.JFrame form_for2;
    private javax.swing.ButtonGroup fun;
    private javax.swing.JComboBox intermedio;
    private javax.swing.JComboBox intermedio1;
    private javax.swing.JComboBox intermedio2;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator14;
    private javax.swing.JPopupMenu.Separator jSeparator15;
    private javax.swing.JPopupMenu.Separator jSeparator16;
    private javax.swing.JPopupMenu.Separator jSeparator17;
    private javax.swing.JPopupMenu.Separator jSeparator18;
    private javax.swing.JPopupMenu.Separator jSeparator19;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator20;
    private javax.swing.JToolBar.Separator jSeparator29;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator30;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel label_var_for;
    private javax.swing.JLabel label_var_for1;
    private javax.swing.JLabel label_var_for2;
    private javax.swing.JLabel label_var_for_2;
    private javax.swing.JLabel label_var_for_3;
    private javax.swing.JLabel label_var_for_4;
    private javax.swing.JLabel lblCadenas;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDatos;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblFunciones;
    private javax.swing.JLabel lblLineas;
    private javax.swing.JLabel lblMen;
    private javax.swing.JLabel lblMenSesion;
    private javax.swing.JLabel lblRecuperarClave;
    private javax.swing.JLabel lblReservada;
    private javax.swing.JLabel lblcomentario;
    private javax.swing.JList lisTema;
    private javax.swing.JList listaEjercicios;
    private javax.swing.JList listaEst;
    private javax.swing.JList listaFuncionesC;
    private javax.swing.JMenuItem m_bool;
    private javax.swing.JMenuItem m_char;
    private javax.swing.JMenuItem m_cierre_met_main;
    private javax.swing.JMenuItem m_cod_1;
    private javax.swing.JMenuItem m_cod_2;
    private javax.swing.JMenuItem m_cod_3;
    private javax.swing.JMenu m_cod_pre;
    private javax.swing.JMenuItem m_complilar;
    private javax.swing.JMenuItem m_conio;
    private javax.swing.JMenuItem m_ctype;
    private javax.swing.JMenuItem m_double;
    private javax.swing.JMenuItem m_dowhile;
    private javax.swing.JMenuItem m_ejecutar;
    private javax.swing.JMenu m_est_de_control;
    private javax.swing.JMenuItem m_float;
    private javax.swing.JMenuItem m_for;
    private javax.swing.JMenuItem m_getche;
    private javax.swing.JMenuItem m_guardar;
    private javax.swing.JMenuItem m_guardar_como;
    private javax.swing.JMenuItem m_if;
    private javax.swing.JMenuItem m_ini_met_main;
    private javax.swing.JMenuItem m_int;
    private javax.swing.JMenuItem m_iselse;
    private javax.swing.JMenu m_libreria;
    private javax.swing.JMenuItem m_long;
    private javax.swing.JMenuItem m_math;
    private javax.swing.JMenuItem m_nueva_codificacion;
    private javax.swing.JMenuItem m_printf;
    private javax.swing.JMenuItem m_scanf;
    private javax.swing.JMenuItem m_short;
    private javax.swing.JMenuItem m_stdio;
    private javax.swing.JMenuItem m_stdlib;
    private javax.swing.JMenuItem m_string;
    private javax.swing.JMenuItem m_switchcase;
    private javax.swing.JMenuItem m_systemcls;
    private javax.swing.JMenuItem m_systempause;
    private javax.swing.JMenu m_variables;
    private javax.swing.JMenuItem m_while;
    private javax.swing.JCheckBox math;
    private javax.swing.JList mensajes;
    private javax.swing.JMenuItem menuCambiarClave;
    private javax.swing.JMenuItem menuChat;
    private javax.swing.JMenuItem menuItemAcercaDe;
    private javax.swing.JMenuItem menuSubir;
    private javax.swing.JMenuItem menuVerificar;
    private javax.swing.JMenuBar menu_aplicacion;
    private javax.swing.JMenu menu_archivo;
    private javax.swing.JMenu menu_edicion;
    private javax.swing.JMenu menu_ejecutar;
    private javax.swing.JMenu menu_insertar;
    private javax.swing.JTextField nomAlu;
    private javax.swing.JRadioButton op10;
    private javax.swing.JRadioButton op3;
    private javax.swing.JRadioButton op4;
    private javax.swing.JRadioButton op5;
    private javax.swing.JRadioButton op6;
    private javax.swing.JRadioButton op7;
    private javax.swing.JRadioButton op8;
    private javax.swing.JRadioButton op9;
    private javax.swing.JCheckBox opOffline;
    private javax.swing.JCheckBoxMenuItem opPantallaCompleta;
    private javax.swing.JPanel panel_estructuras_control;
    private javax.swing.JPanel panel_funciones;
    private javax.swing.JPanel panel_librerias;
    private javax.swing.JPanel panel_variables;
    private javax.swing.JProgressBar pbCompi;
    private javax.swing.JTextArea salerrores;
    private javax.swing.JColorChooser selector;
    private javax.swing.JCheckBox stdio;
    private javax.swing.JCheckBox stdlib;
    private javax.swing.JCheckBox string;
    private javax.swing.JTabbedPane tabconte;
    public static javax.swing.JLabel textoDialogo;
    private javax.swing.JTextArea txtErr;
    private javax.swing.JTextField txt_cases;
    private javax.swing.JTextField txt_nom_fun;
    private javax.swing.JTextField txt_par_fun;
    private javax.swing.JTextField txt_var;
    private javax.swing.JTextField txtlib;
    private javax.swing.JPasswordField txtpas;
    private javax.swing.JTextField valor_incremento;
    private javax.swing.JTextField valor_incremento1;
    private javax.swing.JTextField valor_incremento2;
    private javax.swing.JTextField valor_llegada;
    private javax.swing.JTextField valor_llegada1;
    private javax.swing.JTextField valor_llegada2;
    private javax.swing.JTextField valor_variable_for;
    private javax.swing.JTextField valor_variable_for1;
    private javax.swing.JTextField valor_variable_for2;
    private javax.swing.ButtonGroup var;
    // End of variables declaration//GEN-END:variables

    private void crearNuevaCodificacion(int index) {
        codigos.add(new Codigo(++cont, "c√≥digo", false));
        m_ejecutar.setEnabled(false);
        crearNuevoTab(index);
        codigos.get(index).mostrarCodigoEnJTextArea(areas.get(index));
        codigos.get(index).setNombreString("c√≥digo " + (cont));
        setiarToolTipText();
    }

    private void limpiarFormFor() {
        cbo_var_for.setSelectedIndex(0);
        valor_variable_for.setText("");
        label_var_for.setText("; i");
        intermedio.setSelectedIndex(0);
        valor_llegada.setText("");
        label_var_for_2.setText("; i = i");
        cbofor.setSelectedIndex(0);
        valor_incremento.setText("");
    }

    private void insertarFor() {
        limpiarFormFor();
        form_for.setBounds(new Rectangle(428, 155));
        form_for.setLocationRelativeTo(null);
        form_for.setVisible(true);
    }

    private void insertarFor2() {
        limpiarFormForx2();
        form_for2.setBounds(new Rectangle(428, 200));
        form_for2.setLocationRelativeTo(null);
        form_for2.setVisible(true);
    }

    private void limpiarFormForx2() {
        cbo_var_for1.setSelectedIndex(0);
        valor_variable_for1.setText("");
        label_var_for1.setText("; i");
        intermedio1.setSelectedIndex(0);
        valor_llegada1.setText("");
        label_var_for_3.setText("; i = i");
        cbofor1.setSelectedIndex(0);
        valor_incremento1.setText("");

        cbo_var_for2.setSelectedIndex(0);
        valor_variable_for2.setText("");
        label_var_for2.setText("; i");
        intermedio2.setSelectedIndex(0);
        valor_llegada2.setText("");
        label_var_for_4.setText("; i = i");
        cbofor2.setSelectedIndex(0);
        valor_incremento2.setText("");
    }

//    private void inicializarPaneles() {
//        this.panel_funciones.setVisible(false);
//        this.panel_estructuras.setVisible(false);
//        this.panel_estructuras_control.setVisible(false);
//        this.panel_librerias.setVisible(true);
//        this.panel_variables.setVisible(false);
//
//        paneles[0] = panel_librerias;
//        paneles[1] = panel_estructuras;
//        paneles[2] = panel_funciones;
//        paneles[3] = panel_variables;
//        paneles[4] = panel_estructuras_control;
//    }

//    private void setTitulo(String titulo) {
//
//        lbltitulo.setText(titulo);
//    }

//    private void llenarFlags(int indice, boolean[] flags) {
//        for (int i = 0; i < flags.length; i++) {
//            if (i == indice) {
//                flags[i] = true;
//            } else {
//                flags[i] = false;
//            }
//        }
//    }
//
//    private void ocultarPanles(boolean[] flags, JPanel[] paneles) {
//
//        for (int i = 0; i < flags.length; i++) {
//            if (flags[i]) {
//                paneles[i].setVisible(true);
//            } else {
//                paneles[i].setVisible(false);
//            }
//        }
//    }

    private void darleCuerpoAFunciones() {
        for (int i = 0; i < codigos.get(index).getContadorFunciones(); i++) {
            codigos.get(index).insertarEnCodigo(codigos.get(index).getFuncion(i) + "{\n\n}\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        }
        //actualizarLineas();
    }

    private void ejecutarArchivo() {
        if (codigos.get(index).getPathSinExtension() != null) {
            Ejecutar.abrirExplorador("\"" + codigos.get(index).getPathSinExtension() + "\"");
        } else {
            Mensaje.error("Error", "Primero debe Compilar la Codificaci√≥n");
        }
    }

    private void insertarSwitchCase() {
        String n;
        try {
            n = Mensaje.mostrarMensaje("N¬∫ de Cases", "Ingrese N√∫mero de Casos: ");
            if (n != null && !n.equalsIgnoreCase("")) {
                codigos.get(index).insertarSwitchCase(Integer.parseInt(n), false, txt_cases, areas.get(index), m_ejecutar, m_guardar, tabconte);
            }
        } catch (NumberFormatException e) {
            Mensaje.error("Error", "Solo se aceptan N√∫meros");
            insertarSwitchCase();
        }
    }

    private void abrir() {
//        JFileChooser fileChooser = new JFileChooser();
//
//        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo .c ", "c");
//        FileNameExtensionFilter filter2 = new FileNameExtensionFilter("Archivo .cpp  ", "cpp");
//        fileChooser.addChoosableFileFilter(filter);
//        fileChooser.addChoosableFileFilter(filter2);
//        fileChooser.setApproveButtonText("Abrir C√≥digo");
//        fileChooser.setAcceptAllFileFilterUsed(false);
//        int seleccion = fileChooser.showOpenDialog(null);
//        try {
        if (Abrir.abrir("cpp, c", "Abrir c√≥digo", "/")) {
            index = codigos.size();
            crearNuevaCodificacion(index);
            codigos.get(index).modificarCodigoGuardado(true);
            codigos.get(index).borrarCodigo(false, areas.get(index));
            File fichero = Abrir.getArchivo();
            codigos.get(index).setPath(fichero.getPath(), fichero.getPath());

//                BufferedReader reader = new BufferedReader(new FileReader(fichero));
//                String linea = reader.readLine();
//                while (linea != null) {
//                    codigos.get(index).insertarEnCodigo(linea + "\n", areas.get(index), m_ejecutar,
//                            m_guardar, tabconte);
//                    linea = reader.readLine();
//                }
            codigos.get(index).insertarEnCodigo(Abrir.getArchivoComoString(), areas.get(index), m_ejecutar,
                    m_guardar, tabconte);

            codigos.get(index).setNombre(codigos.get(index).getPathConExtension(), true);
            tabconte.setTitleAt(tabconte.getSelectedIndex(), codigos.get(index).getNombre());
        }
//        } catch (IOException e) {
//        }
    }

    private void insertarCodigoPredise√±ado1() {
        index = codigos.size();
        crearNuevaCodificacion(index);
        codigos.get(index).setIndice(-1);
//        codigos.get(index).setNuevaFirma("1.7.3", "Febrero", "2011");
        codigos.get(index).setCodigo(codigos.get(index).getFirma());
        codigos.get(index).insertarEnCodigo("#include <stdio.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("#include <stdlib.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("#include <conio.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("\n\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("int main(void){\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("    return 0;\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("}", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }

    private void insertarCodigoPredise√±ado2() {
        index = codigos.size();
        crearNuevaCodificacion(index);
        codigos.get(index).setIndice(-1);
//        codigos.get(index).setNuevaFirma("1.7.1", "Octubre", "2010");
        codigos.get(index).setCodigo(codigos.get(index).getFirma());
        codigos.get(index).insertarEnCodigo("#include <stdio.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("#include <stdlib.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("#include <conio.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("\n\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("int main(void){\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("    printf(\"\\nHola Mundo!\");\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("    getche();\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("    return 0;\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("}", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }

    private void insertarCodigoPredise√±ado3() {
        index = codigos.size();
        crearNuevaCodificacion(index);
        codigos.get(index).setIndice(-1);
//        codigos.get(index).setNuevaFirma("1.7.1", "Octubre", "2010");
        codigos.get(index).setCodigo(codigos.get(index).getFirma());
        codigos.get(index).insertarEnCodigo("#include <stdio.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("#include <stdlib.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("#include <conio.h>\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("\n\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("int main(void){\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarMenu(txt_cases, areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("    return 0;\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("}", areas.get(index), m_ejecutar, m_guardar, tabconte);
        codigos.get(index).insertarEnCodigo("\n", areas.get(index), m_ejecutar, m_guardar, tabconte);
    }

    private void crearNuevoTab(int i) {
//        panes.add(new javax.swing.JPanel());
//        panes.get(i).setLayout(new java.awt.BorderLayout());
//        panes.get(i).setName("codificaci√≥n");

        areas.add(new RSyntaxTextArea());
        
        areas.get(i).setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_CPLUSPLUS);
        areas.get(i).setBounds(0, 0, tabconte.getWidth(), tabconte.getHeight());
        areas.get(i).setColumns(20);
        areas.get(i).setColumns(20);
        areas.get(i).setFont(new java.awt.Font("Courier New", 0, 13));
        areas.get(i).setTabSize(4);
        areas.get(i).setMarkOccurrences(true);
        areas.get(i).setAutoIndentEnabled(true);
        areas.get(i).addMouseListener(new java.awt.event.MouseAdapter() {

            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                areasMouseReleased(evt);
            }

            private void areasMouseReleased(MouseEvent evt) {
                codigos.get(index).setIndice(areas.get(index).getSelectionStart());
            }
        });
        areas.get(i).addKeyListener(new java.awt.event.KeyAdapter() {

            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                areasKeyReleased(evt);
            }

            @Override
            public void keyTyped(KeyEvent e) {
            }

            private void areasKeyReleased(KeyEvent evt) {
                codigos.get(index).setIndice(areas.get(index).getSelectionStart());
                codigos.get(index).borrarCodigo();
                codigos.get(index).setCodigo(areas.get(index).getText());
                codigos.get(index).modificarCodigoGuardado(false);
                String nombre = codigos.get(index).getNombre();
                System.out.println("Nombre del Tab: " + nombre);
                //                if (!nombre.contains("*")) {
                //                    codigos.get(index).setNombreString("*" + codigos.get(index).getNombre());
                //                    tabconte.setTitleAt(tabconte.getSelectedIndex(), codigos.get(index).getNombre());
                //                }
                Pestana pestana = (Pestana)tabconte.getTabComponentAt(index);
                pestana.setBold(true);
                //m_ejecutar.setEnabled(false);
                if (codigos.get(index).getPathConExtension() != null) {
                    m_guardar.setEnabled(true);
                }

//                System.out.println("sadasdasd "+evt.getKeyCode());
//                if(evt.getKeyChar() == 'j'){
//                    try {
//                        java.awt.Robot r = new java.awt.Robot();
//                        r.keyPress(KeyEvent.VK_CONTROL);
//                        r.keyPress(KeyEvent.VK_SPACE);
//
//                        r.keyRelease(KeyEvent.VK_SPACE);
//                        r.keyRelease(KeyEvent.VK_CONTROL);
//                    } catch (AWTException ex) {
//                        Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
//                    }
//                }
            }
        });

        scrolls.add(new RTextScrollPane(areas.get(i)));
        scrolls.get(i).setName("codigo"); //esto lo hago para verificar que cuando inserte codigo no sea en la pagina de inicio
//        panes.get(i).add(scrolls.get(i), java.awt.BorderLayout.CENTER);//agrego el area de texto del codigo

//        tabconte.addTab(codigos.get(i).getNombre(), new javax.swing.ImageIcon(getClass().getResource("/imagenes/document-text.png")), panes.get(i));
        
        
        tabconte.addTab(codigos.get(i).getNombre(), scrolls.get(i));
        Pestana pestana = new Pestana(tabconte);
        tabconte.setTabComponentAt(tabconte.getTabCount()-1,pestana);
        tabconte.setSelectedIndex(i);
        setDatosArchivoConfiguracionEnPrograma();
        setLineasVisibles(Temas.IS_LINEAS);

//        tabconte.setSelectedComponent(panes.get(i));
        codigos.get(i).setiTab(tabconte.getSelectedIndex());
        codigos.get(i).setId(index);

        ac.install(areas.get(i));
        
        
    }

    private void guardarComo() {
        Pestana pestana = (Pestana)tabconte.getTabComponentAt(index);
        if (Guardar.guardarComo(pestana.getNombre(), "c, cpp", "Guardar Codificaci√≥n", "/")) {
            codigos.get(index).setPath(Guardar.getRuta(), Guardar.getRutaSinExtension());
            Archivo.escribirEnAchivo(Guardar.getRuta(), codigos.get(index).getCodigo(), true, false);
            codigos.get(index).modificarCodigoGuardado(true);
            m_guardar.setEnabled(false);
            codigos.get(index).setNombre(Guardar.getRuta(), true);
            tabconte.setTitleAt(tabconte.getSelectedIndex(), codigos.get(index).getNombre());
//            pestana.setNombre(codigos.get(index).getNombre());
            pestana.setBold(false);
//            tabconte.setTabComponentAt(index, pestana);
        } else {
            Mensaje.OPCION = Mensaje.CANCELAR;
        }
    }

    private void removerTab(int indice) {
        codigos.remove(indice);
        scrolls.remove(indice);
        areas.remove(indice);
        //quitando el JPanel al que pertenece esta pesta√±a
        tabconte.remove(indice);
//        System.out.println("Indice removido: "+index);
        index = tabconte.getSelectedIndex();
//        System.out.println("Indice sel: "+index);
//        System.out.println("Tab Removido: " + indice);
//
//        codigos.remove(indice);
////        panes.remove(indice);
//        scrolls.remove(indice);
//        areas.remove(indice);
//        index = tabconte.getSelectedIndex();
//        System.out.println("cantidad de codigos: ----->" + codigos.size());
    }

    private void guardar() {
        if (index >= 0) {
            if (codigos.get(index).getPathConExtension() != null) {
                codigos.get(index).guardar(m_guardar);
//                if (codigos.get(index).getNombre().contains("*")) {
//                    codigos.get(index).setNombreString(codigos.get(index).getNombre().substring(1));
//                }
                Pestana pestana = (Pestana)tabconte.getTabComponentAt(index);
                pestana.setBold(false);
//                tabconte.setTitleAt(tabconte.getSelectedIndex(), codigos.get(index).getNombre());
            } else {
                guardarComo();
            }
        }
    }

    private void accionCerrarPesta√±a() {
        index = tabconte.getSelectedIndex();
        if (codigos.get(index).codigoGuardado()) {
            removerTab(index);
        } else {
            if ((Mensaje.OPCION = Mensaje.preguntaSiNoCancelar("El c√≥digo actual \"" + codigos.get(index).getNombre() + "\" a√∫n no se "
                    + "ha guardado, ¬øDesea Guardar antes de cerrar la pesta√±a?")) == Mensaje.SI) {
                if (codigos.get(index).getPathConExtension() == null) {
                    guardarComo();
                } else {
                    codigos.get(index).guardar(m_guardar);
                }
            }
            if (Mensaje.OPCION != Mensaje.CANCELAR) {
                removerTab(index);
            }
        }

    }

    private void cerrarTodasLasPesta√±as() {
        if (tabconte.getTabCount() != 0) {
            while (!codigos.isEmpty()) {
                if (tabconte.getSelectedIndex() != 0) {
                    if (!(codigos.get(0).codigoGuardado())) {
                        tabconte.setSelectedComponent(scrolls.get(0));
                        if ((Mensaje.OPCION = Mensaje.preguntaSiNoCancelar("La Codificaci√≥n \"" + codigos.get(0).getNombre() + "\" a√∫n no se "
                                + "ha guardado, ¬øDesea Guardarla antes de Salir?")) == Mensaje.SI) {
                            if (codigos.get(0).getPathConExtension() == null) {
                                guardarComo();
                            } else {
                                codigos.get(0).guardar(m_guardar);
                            }
                            removerTab(0);
                        } else if (Mensaje.OPCION == Mensaje.NO) {
                            removerTab(0);
                        }
                        if (Mensaje.OPCION == Mensaje.CANCELAR) {
                            break;
                        }
                    } else {
                        removerTab(0);
                    }
                }
            }
        }
    }

    private void opcionCerrarPesta√±a() {
        if (tabconte.getTabCount() != 0) {
            accionCerrarPesta√±a();
        }
    }

//    private void nuevoProyecto() {
//        lblinfopro.setVisible(false);
//        Cambiar.tama√±oDeFormulario(formNuevoProyecto, false, "Nuevo Proyecto");
//        this.setEnabled(false);
//        limpiarFormNuevoProyecto();
//        formNuevoProyecto.setVisible(true);
//    }

//    private void limpiarFormNuevoProyecto() {
//        txtnompro.setText("AplicacionC");
//        verificarNombreProyecto();
//        txtnompro.setSelectionStart(0);
//        txtnompro.setSelectionEnd(txtnompro.getText().length());
//        Guardar.setRuta(System.getProperty("user.home"));
//        txtubipro.setText(Guardar.getRuta() + P.SEPARADOR + "AplicacionC");
//        opCrearCodigo.setSelected(true);
//        opCrearLibreria.setSelected(false);
//        txtnomcod.setText("codigo1");
//        txtnomcod.setSelectionStart(0);
//        txtnomcod.setSelectionEnd(txtnomcod.getText().length());
//        txtnomcod.setEnabled(true);
//        txtnomlib.setText("libreria1");
//        txtnomlib.setEditable(false);
//    }

//    private void abrirCodificacionDeProyecto(Codigo codigo) {
//        index = codigos.size();
//        codigos.add(codigo);
//        m_ejecutar.setEnabled(false);
//        crearNuevoTab(index);
//        codigos.get(index).mostrarCodigoEnJTextArea(areas.get(index));
//        setiarToolTipText();
//        tabconte.setTitleAt(tabconte.getSelectedIndex(), codigos.get(index).getNombre());
//    }

//    private void abrirProyecto() {
//        final JFileChooser fileChooser = new JFileChooser();
//        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
//        fileChooser.addActionListener(new ActionListener() {
//
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                if (e.getActionCommand().equalsIgnoreCase(JFileChooser.APPROVE_SELECTION)) {
//                    String rutaElegida = fileChooser.getSelectedFile().getAbsolutePath();
//                    System.out.println(rutaElegida + P.SEPARADOR + "configuracion.dat");
//                    if (new File(rutaElegida + P.SEPARADOR + "configuracion.dat").exists()) {//si existe es un proyecto
//                        Proyecto pro = leerProyecto(rutaElegida + P.SEPARADOR + "configuracion.dat");//rescatando el Objeto proyecto gUARDADO en un archivo
//                        if (!isProyectoAbierto(pro)) {//y si el proyecto no esta abierto lo agrego a la lista de proyectos y reconstruiyo el arbol
//                            proyectos.add(pro); //agregando a la lista
//                            reconstruirArbolDeProyectos();
//                            cont_pro++;
//                        } else {
//                            Mensaje.informacion("El proyecto est√° actualmente abierto");
//                            abrirProyecto();
//                        }
//                    }
//                }
//            }
//        });
//
//        int seleccion = fileChooser.showOpenDialog(null);
//        if (seleccion == JFileChooser.APPROVE_OPTION) {
//        }
//    }
//
//    private void escribirObjetoProyectoEnArchivo(Proyecto p) {
//        try {
//            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(p.getRuta() + P.SEPARADOR + "configuracion.dat"));
//            oos.writeObject(p);
//        } catch (IOException ex) {
//            Logger.getLogger(Proyecto.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }
//
//    private Proyecto leerProyecto(String rutaConfiguracion) {
//        try {
//            ObjectInputStream ois = new ObjectInputStream(new FileInputStream(rutaConfiguracion));
//            return (Proyecto) ois.readObject();
//        } catch (ClassNotFoundException | IOException ex) {
//            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        return null;
//    }
//
//    private void reconstruirArbolDeProyectos() {
//        ponerLibreriasEnCombo();
//        if (proyectos.isEmpty()) {
//            try {
//                DefaultTreeCellRenderer render = (DefaultTreeCellRenderer) arbolProyectos.getCellRenderer();
//                render.setLeafIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/block.png")));
//            } catch (java.lang.ClassCastException e) {
//            }
//
//            arbolProyectos.setModel(new javax.swing.tree.DefaultTreeModel(new DefaultMutableTreeNode("<No hay Proyectos Abiertos>")));
//            arbolProyectos.setRootVisible(true);
//        } else {
//            rootFalse = new DefaultMutableTreeNode("root");
//            Proyecto pro;
//            for (int i = 0; i < proyectos.size(); i++) {
//                pro = (Proyecto) proyectos.get(i);
//                rootFalse.add(pro.getArbolDeProyecto());
//            }
//            try {
//                DefaultTreeCellRenderer render = (DefaultTreeCellRenderer) arbolProyectos.getCellRenderer();
//                render.setLeafIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/document-text.png")));
//            } catch (java.lang.ClassCastException e) {
//            }
//
//            arbolProyectos.setModel(new DefaultTreeModel(rootFalse));
//            arbolProyectos.setRootVisible(false);
//            expandirProyectos(proyectos);
//        }
//    }
//
//    private void cargarProyectos() {
//        proyectos = leerProyectosGuardados(Rutas.PROYECTOS_GUARDADOS);
//        verificarProyectosExistentes(proyectos, 0);
//        reconstruirArbolDeProyectos();
//    }
//
//    private List leerProyectosGuardados(String rutaConfiguracion) {
//        try {
//            ObjectInputStream ois = new ObjectInputStream(new FileInputStream(rutaConfiguracion));
//            return (List) ois.readObject();
//        } catch (ClassNotFoundException | IOException ex) {
//            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        return null;
//    }
//
//    private void verificarNombreProyecto() {
//        if (Proyecto.isProyecto(txtnompro.getText().trim(), proyectos)) {
//            lblalerta.setVisible(true);
//            btncrearpro.setEnabled(false);
//        } else {
//            lblalerta.setVisible(false);
//            btncrearpro.setEnabled(true);
//        }
//    }
//
//    private void verificarProyectosExistentes(List pro, int indice) {
//        Proyecto p;
//        try {
//            p = (Proyecto) pro.get(indice);
//            if (!(new File(p.getRuta())).exists()) {
//                pro.remove(indice);
//            } else {
//                verificarProyectosExistentes(pro, ++indice);
//            }
//        } catch (IndexOutOfBoundsException e) {
//        }
//    }
//
//    private void cerrarCodigosDeProyecto(Proyecto pro) {
//        if (tabconte.getTabCount() != 0) {//si hay tabs, busco
//            String rutaCodPro, rutaCodTab;
//            Codigo codPro, codTab;
//
//            //primero busco codigos
//            for (int i = 0; i < pro.getCodigos().size(); i++) {
//                codPro = pro.getCodigo(i);
//                rutaCodPro = codPro.getPathConExtension();
//                boolean ex = false;
//                for (int j = 0; j < codigos.size() && !ex; j++) {
//                    codTab = (Codigo) codigos.get(j);
//                    rutaCodTab = codTab.getPathConExtension();
//
//                    if (rutaCodPro.equalsIgnoreCase(rutaCodTab)) {
//                        cerrarTab(j);
//                        ex = true;
//                    }
//                }
//            }
//        }
//    }

    private void cerrarTab(int indice) {
        if (codigos.get(indice).codigoGuardado()) {
            removerTab(indice);
        } else {
            if ((Mensaje.OPCION = Mensaje.preguntaSiNoCancelar("El c√≥digo actual \"" + codigos.get(indice).getNombre() + "\" a√∫n no se "
                    + "ha guardado, ¬øDesea Guardar antes de cerrar la pesta√±a?")) == Mensaje.SI) {
                if (codigos.get(indice).getPathConExtension() == null) {
                    guardarComo();
                } else {
                    codigos.get(indice).guardar(m_guardar);
                }
            }
            if (Mensaje.OPCION != Mensaje.CANCELAR) {
                removerTab(indice);
            }
        }
    }

    private boolean isCodigoAbierto(Codigo cod) {
        if (tabconte.getTabCount() != 0) {//si hay tabs, busco
            String rutaCod, rutaCodTab;
            Codigo codTab;

            //primero busco codigos

            rutaCod = cod.getPathConExtension();
            for (int i = 0; i < codigos.size(); i++) {
                codTab = (Codigo) codigos.get(i);
                rutaCodTab = codTab.getPathConExtension();

                if (rutaCod.equalsIgnoreCase(rutaCodTab)) {
                    return true;
                }
            }
            return false;
        } else {
            return false;
        }
    }

//    private boolean isProyectoAbierto(Proyecto pro) {
//        if (!proyectos.isEmpty()) {//si los proyectos no esta vacio busco
//            String rutaPro, rutaProyectoActual;
//            Proyecto proActual;
//
//            rutaPro = pro.getRuta();
//            for (int i = 0; i < proyectos.size(); i++) {
//                proActual = (Proyecto) proyectos.get(i);
//                rutaProyectoActual = proActual.getRuta();
//
//                if (rutaPro.equalsIgnoreCase(rutaProyectoActual)) {
//                    return true;
//                }
//            }
//            return false;
//        } else {
//            return false;
//        }
//    }

//    private void expandirProyectos(List pro) {
//        int i = 0;
//        int c = 0;
//        Proyecto p;
//        while (c < pro.size()) {
//            p = (Proyecto) pro.get(c);
//            if (p.isProyectoExpandible()) {
//                arbolProyectos.expandRow(i);
//                if (p.isCodigosExpandible()) {
//                    i++;
//                    arbolProyectos.expandRow(i);
//                    if (p.isLibreriasExpandible()) {
//                        i++;
//                        arbolProyectos.expandRow(i);
//                        i += p.getLibrerias().size() + 1 + p.getCodigos().size() + 1;
//                    } else {
//                        i += p.getCodigos().size() + 2;
//                    }
//                } else {
//                    i += 2;
//                }
//            } else {
//                i++;
//            }
//            c++;
//        }
//    }
//
//    private void verificarNombreDeCodigo() {
//        if (txtnomcodnuevo.getText().trim().equalsIgnoreCase("")) {
//            lblinfocod.setVisible(true);
//            btnCrearCodigoNuevo.setEnabled(false);
//            lblalerta1.setVisible(false);
//        } else if ((new File(txtubicod.getText().trim()).exists())) {
//            lblalerta1.setText("El Archivo " + txtnomcodnuevo.getText().trim() + ".cpp ya existe");
//            lblalerta1.setVisible(true);
//            btnCrearCodigoNuevo.setEnabled(false);
//            lblinfocod.setVisible(false);
//        } else {
//            lblalerta1.setVisible(false);
//            btnCrearCodigoNuevo.setEnabled(true);
//            lblinfocod.setVisible(false);
//        }
//    }

//    private void verificarNombreDeLibreria() {
//        if (txtnomlibnueva.getText().trim().equalsIgnoreCase("")) {
//            lblinfolib.setVisible(true);
//            btnCrearLibreriaNueva.setEnabled(false);
//            lblalerta3.setVisible(false);
//        } else if ((new File(txtubilib.getText().trim()).exists())) {
//            lblalerta3.setText("El Archivo " + txtnomlibnueva.getText().trim() + ".h ya existe");
//            lblalerta3.setVisible(true);
//            btnCrearLibreriaNueva.setEnabled(false);
//            lblinfolib.setVisible(false);
//        } else {
//            lblalerta3.setVisible(false);
//            btnCrearLibreriaNueva.setEnabled(true);
//            lblinfolib.setVisible(false);
//        }
//    }

//    private void ponerLibreriasEnCombo() {
//        cboLib.removeAllItems();
//        cboRutas.removeAllItems();
//        cboLib.addItem("Seleccione Alguna Librer√≠a...");
//        cboRutas.addItem("");
//        Proyecto pro;
//        Codigo lib;
//
//        for (int i = 0; i < proyectos.size(); i++) {
//            pro = (Proyecto) proyectos.get(i);
//            for (int j = 0; j < pro.getLibrerias().size(); j++) {
//                lib = pro.getLibreria(j);
//                cboLib.addItem(lib.getNombre());
//                cboRutas.addItem(lib.getPathConExtension());
//            }
//        }
//    }

    private void inicializarAutocompletado() {
        provider = createCompletionProvider();
        ac = new AutoCompletion(provider);
    }

    private CompletionProvider createCompletionProvider() {
        DefaultCompletionProvider proveedor = new DefaultCompletionProvider();
        try {
            
            JespXML jedi = new JespXML(new File("config"+File.separator+"herramientas"+File.separator+"completacion.xml"));
            Tag raiz = jedi.leerXML();
            Tag basicos, avanzados;
            basicos = raiz.getTagHijo("basico", Tag.Cantidad.primeraOcurrencia).get(0);
            avanzados = raiz.getTagHijo("avanzado", Tag.Cantidad.primeraOcurrencia).get(0);
            
            String val;
            for(Tag pal : basicos.getTagsHijos()){
                val = pal.getValorDeAtributo("value");
                if(val.equalsIgnoreCase("-1")){
                    proveedor.addCompletion(new BasicCompletion(proveedor, pal.getContenido()));
                }else{
                    proveedor.addCompletion(new BasicCompletion(proveedor, val));
                }
            }
            
            
            for(Tag pal : avanzados.getTagsHijos()){
                proveedor.addCompletion(
                        new ShorthandCompletion(
                        proveedor, 
                        pal.getValorDeAtributo("title"), 
                        pal.getContenido(),
                        pal.getValorDeAtributo("desc")));
            }
            
            
            
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "auto"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "break"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "case"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "char"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "const"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "continue"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "default"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "do"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "double"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "else"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "enum"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "extern"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "float"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "for"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "int i;\nfor(int i= ; i< ; i++){}"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "goto"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "if"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "if(){}"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "if(){}else{}"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "int"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "long"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "register"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "return"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "short"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "signed"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "sizeof"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "static"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "struct"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "typedef"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "union"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "unsigned"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "void"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "volatile"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "while"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "while(){}"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "printf(\"\");"));
    //        proveedor.addCompletion(new BasicCompletion(proveedor, "scanf(\"%\",&);"));
    //        
    ////        proveedor.addCompletion(new ShorthandCompletion(proveedor, "sysout", "System.out.println(", "System.out.println("));
    ////        proveedor.addCompletion(new ShorthandCompletion(proveedor, "syserr", "System.err.println(", "System.err.println("));
    //        
    //        proveedor.addCompletion(new ShorthandCompletion(proveedor, "_jedic_printf", "printf(\"\");","printf simple"));
    //        proveedor.addCompletion(new ShorthandCompletion(proveedor, "_jedic_printf", "printf(\"%d\", );","printf int"));
    //        proveedor.addCompletion(new ShorthandCompletion(proveedor, "_jedic_printf", "printf(\"\");","printf simple"));
    //        proveedor.addCompletion(new ShorthandCompletion(proveedor, "_jedic_printf", "printf(\"\");","printf simple"));
    //        proveedor.addCompletion(new ShorthandCompletion(proveedor, "_jedic_printf", "printf(\"\");","printf simple"));
    //        proveedor.addCompletion(new ShorthandCompletion(proveedor, "_jedic_printf", "printf(\"\");","printf simple"));
    //        proveedor.addCompletion(new ShorthandCompletion(proveedor, "_jedic_printf", "printf(\"\");","printf simple"));
    //        proveedor.addCompletion(new ShorthandCompletion(proveedor, "_jedic_printf", "printf(\"\");","printf simple"));
    //        proveedor.addCompletion(new ShorthandCompletion(proveedor, "_jedic_scanf", "scanf(\"%\",&);","scanf simple"));
            
            
            
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SAXException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }
        return proveedor;

    }

    private void cambiarTema(String tema) {
        try {
            if(tema.equalsIgnoreCase(Temas.S_OPERATIVO_ACTUAL)){
                 UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            }else{
                 UIManager.setLookAndFeel(tema);
            }
           
            SwingUtilities.updateComponentTreeUI(JedicAlumno.this);
            SwingUtilities.updateComponentTreeUI(form_for);
            SwingUtilities.updateComponentTreeUI(form_for2);
//            SwingUtilities.updateComponentTreeUI(formNuevoProyecto);
//            SwingUtilities.updateComponentTreeUI(formCodNuevo);
//            SwingUtilities.updateComponentTreeUI(formLibNueva);
            SwingUtilities.updateComponentTreeUI(formInicio);
            SwingUtilities.updateComponentTreeUI(formBajar);
            SwingUtilities.updateComponentTreeUI(formTemas);
            SwingUtilities.updateComponentTreeUI(formColores);
            SwingUtilities.updateComponentTreeUI(formAyudaC);
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            Temas.ACTUAL = tema;
            Temas.IS_SUBSTANCE = false;
//            conf.actualizarCampo("substance", "false");
        }

    }

    private void cambiarTemaSubstance(String tema) {
        SubstanceLookAndFeel.setSkin("org.jvnet.substance.skin." + tema + "Skin");
//        conf.actualizarCampo("substance", "true");
        Temas.ACTUAL = tema;
        Temas.IS_SUBSTANCE = true;
    }

    private void setLineasVisibles(boolean b) {
        Temas.IS_LINEAS = b;
        for (int i = 0; i < tabconte.getTabCount(); i++) {
            scrolls.get(i).setLineNumbersEnabled(b);
        }
    }

    private void agregarTipoAlaLista(javax.swing.JRadioButton op, int constante) {
        if (op.isSelected()) {
            tipo.add(constante);
        } else {
            tipo.remove(tipo.indexOf(constante));
        }
    }

    private void getInformacionDeArchDeConfiguracion() throws ParserConfigurationException, SAXException, SAXException, IOException {
        JespXML archivo = new JespXML(Rutas.ARCHIVO_CONFIGURACIONES);
        Tag config = archivo.leerXML();
        Tag apariencia = config.getTagHijo("apariencia", Tag.Cantidad.primeraOcurrencia).get(0);
        Tag color = apariencia.getTagHijo("color", Tag.Cantidad.primeraOcurrencia).get(0);
        Tag lineas = apariencia.getTagHijo("lineas", Tag.Cantidad.primeraOcurrencia).get(0);
        
        for(Tag componente : color.getTagsHijos()){
            
            switch(componente.getValorDeAtributo("id")){
                case "comentario": {
                    Colores.COMENTARIO_COLOR = new Color(Integer.parseInt(componente.getValorDeAtributo("rgb")));
                    break;
                }
                case "palabraReservada": {
                    Colores.PALABRA_RESERVADA_COLOR = new Color(Integer.parseInt(componente.getValorDeAtributo("rgb")));
                    break;
                }
                case "funciones": {
                    Colores.FUNCIONES_COLOR = new Color(Integer.parseInt(componente.getValorDeAtributo("rgb")));
                    break;
                }
                case "cadenas": {
                    Colores.CADENAS_Y_NUMEROS_COLOR = new Color(Integer.parseInt(componente.getValorDeAtributo("rgb")));
                    break;
                }
                case "tiposDeDatos": {
                    Colores.TIPOS_DE_DATOS_COLOR = new Color(Integer.parseInt(componente.getValorDeAtributo("rgb")));
                    break;
                }
                case "fondo": {
                    Colores.FONDO_COLOR = new Color(Integer.parseInt(componente.getValorDeAtributo("rgb")));
                    break;
                }
                case "codigo": {
                    Colores.CODIGO_COLOR = new Color(Integer.parseInt(componente.getValorDeAtributo("rgb")));
                    break;
                }
                case "linea": {
                    Colores.LINEA_COLOR = new Color(Integer.parseInt(componente.getValorDeAtributo("rgb")));
                    break;
                }
            }
        }
        
//        conf = new ArchivoExistente(Rutas.ARCHIVO_CONFIGURACION);
//        Colores.COMENTARIO_COLOR = new Color(Integer.parseInt(conf.getValorDeConfiguracion("comentario")));
//        Colores.CADENAS_Y_NUMEROS_COLOR = new Color(Integer.parseInt(conf.getValorDeConfiguracion("cadenas")));
//        Colores.PALABRA_RESERVADA_COLOR = new Color(Integer.parseInt(conf.getValorDeConfiguracion("palabraReservada")));
//        Colores.FUNCIONES_COLOR = new Color(Integer.parseInt(conf.getValorDeConfiguracion("funciones")));
//        Colores.TIPOS_DE_DATOS_COLOR = new Color(Integer.parseInt(conf.getValorDeConfiguracion("tiposDeDatos")));
//        Colores.FONDO_COLOR = new Color(Integer.parseInt(conf.getValorDeConfiguracion("fondo")));
//        Colores.CODIGO_COLOR = new Color(Integer.parseInt(conf.getValorDeConfiguracion("codigo")));
//        Colores.LINEA_COLOR = new Color(Integer.parseInt(conf.getValorDeConfiguracion("linea")));

        Temas.ACTUAL = apariencia.getValorDeAtributo("tema");
        Temas.IS_LINEAS = Boolean.valueOf(lineas.getValorDeAtributo("habilitado"));

        chkLineas.setSelected(Temas.IS_LINEAS);

        Temas.IS_SUBSTANCE = Boolean.valueOf(apariencia.getValorDeAtributo("substance"));

        if (Temas.IS_SUBSTANCE) {
            cambiarTemaSubstance(Temas.ACTUAL);
        } else {
            cambiarTema(Temas.ACTUAL);
        }
    }

    private void setDatosArchivoConfiguracionEnPrograma() {
        SyntaxScheme scheme = areas.get(index).getSyntaxScheme();
        //color comentarios
        scheme.styles[Token.COMMENT_EOL].foreground = Colores.COMENTARIO_COLOR;
        scheme.styles[Token.COMMENT_MULTILINE].foreground = Colores.COMENTARIO_COLOR;
        scheme.styles[Token.COMMENT_DOCUMENTATION].foreground = Colores.COMENTARIO_COLOR;
        //color palabras reservadas
        scheme.styles[Token.RESERVED_WORD].foreground = Colores.PALABRA_RESERVADA_COLOR;
        //funciones
        scheme.styles[Token.FUNCTION].foreground = Colores.FUNCIONES_COLOR;
        //cadenas y numeros
        scheme.styles[Token.LITERAL_BOOLEAN].foreground = Colores.CADENAS_Y_NUMEROS_COLOR;
        scheme.styles[Token.LITERAL_NUMBER_DECIMAL_INT].foreground = Colores.CADENAS_Y_NUMEROS_COLOR;
        scheme.styles[Token.LITERAL_NUMBER_FLOAT].foreground = Colores.CADENAS_Y_NUMEROS_COLOR;
        scheme.styles[Token.LITERAL_NUMBER_HEXADECIMAL].foreground = Colores.CADENAS_Y_NUMEROS_COLOR;
        scheme.styles[Token.LITERAL_STRING_DOUBLE_QUOTE].foreground = Colores.CADENAS_Y_NUMEROS_COLOR;
        scheme.styles[Token.LITERAL_CHAR].foreground = Colores.CADENAS_Y_NUMEROS_COLOR;
        scheme.styles[Token.LITERAL_BACKQUOTE].foreground = Colores.CADENAS_Y_NUMEROS_COLOR;
        //Tipos de datos
        scheme.styles[Token.DATA_TYPE].foreground = Colores.TIPOS_DE_DATOS_COLOR;

        areas.get(index).setBackground(Colores.FONDO_COLOR);
        areas.get(index).setForeground(Colores.CODIGO_COLOR);
        areas.get(index).setCurrentLineHighlightColor(Colores.LINEA_COLOR);



        if (Temas.IS_SUBSTANCE) {
            cambiarTemaSubstance(Temas.ACTUAL);
        } else {
            cambiarTema(Temas.ACTUAL);
        }
    }

    private void guardarConfiguracionEnArchivo() throws ParserConfigurationException, SAXException, IOException, TransformerConfigurationException, FileNotFoundException, TransformerException {
        JespXML archivo = new JespXML(Rutas.ARCHIVO_CONFIGURACIONES);
        Tag config = archivo.leerXML();
        Tag apariencia = config.getTagHijo("apariencia", Tag.Cantidad.primeraOcurrencia).get(0);
        Tag color = apariencia.getTagHijo("color", Tag.Cantidad.primeraOcurrencia).get(0);
        Tag lineas = apariencia.getTagHijo("lineas", Tag.Cantidad.primeraOcurrencia).get(0);
        
        for(Tag componente : color.getTagsHijos()){
            
            switch(componente.getValorDeAtributo("id")){
                case "comentario": {
                    componente.actualizarValorAtributo("rgb", Colores.COMENTARIO_COLOR.getRGB());
                    break;
                }
                case "palabraReservada": {
                    componente.actualizarValorAtributo("rgb", Colores.PALABRA_RESERVADA_COLOR.getRGB());
                    break;
                }
                case "funciones": {
                    componente.actualizarValorAtributo("rgb", Colores.FUNCIONES_COLOR.getRGB());
                    break;
                }
                case "cadenas": {
                    componente.actualizarValorAtributo("rgb", Colores.CADENAS_Y_NUMEROS_COLOR.getRGB());
                    break;
                }
                case "tiposDeDatos": {
                    componente.actualizarValorAtributo("rgb", Colores.TIPOS_DE_DATOS_COLOR.getRGB());
                    break;
                }
                case "fondo": {
                    componente.actualizarValorAtributo("rgb", Colores.FONDO_COLOR.getRGB());
                    break;
                }
                case "codigo": {
                    componente.actualizarValorAtributo("rgb", Colores.CODIGO_COLOR.getRGB());
                    break;
                }
                case "linea": {
                    componente.actualizarValorAtributo("rgb", Colores.LINEA_COLOR.getRGB());
                    break;
                }
            }
        }
        apariencia.actualizarValorAtributo("substance", Boolean.toString(Temas.IS_SUBSTANCE));
        apariencia.actualizarValorAtributo("tema", Temas.ACTUAL);
        lineas.actualizarValorAtributo("habilitado", Boolean.toString(Temas.IS_LINEAS));
        
        archivo.escribirXML(config);
//        conf.actualizarCampo("comentario", Colores.COMENTARIO_COLOR);
//        conf.actualizarCampo("cadenas", Colores.CADENAS_Y_NUMEROS_COLOR);
//        conf.actualizarCampo("palabraReservada", Colores.PALABRA_RESERVADA_COLOR);
//        conf.actualizarCampo("funciones", Colores.FUNCIONES_COLOR);
//        conf.actualizarCampo("tiposDeDatos", Colores.TIPOS_DE_DATOS_COLOR);
//        conf.actualizarCampo("fondo", Colores.FONDO_COLOR);
//        conf.actualizarCampo("codigo", Colores.CODIGO_COLOR);
//        conf.actualizarCampo("linea", Colores.LINEA_COLOR);
//        conf.actualizarCampo("tema", Temas.ACTUAL);
//        conf.actualizarCampo("lineas", Boolean.toString(Temas.IS_LINEAS));
//        conf.actualizarCampo("substance", Boolean.toString(Temas.IS_SUBSTANCE));
    }

    private void dejarColoresDefault() {
        Colores.COMENTARIO_COLOR = new Color(-16744448);
        Colores.CADENAS_Y_NUMEROS_COLOR = new Color(-10223416);
        Colores.PALABRA_RESERVADA_COLOR = new Color(-16776961);
        Colores.FUNCIONES_COLOR = new Color(-5406720);
        Colores.TIPOS_DE_DATOS_COLOR = new Color(-16744320);
        Colores.FONDO_COLOR = new Color(-1);
        Colores.CODIGO_COLOR = new Color(-16777216);
        Colores.LINEA_COLOR = new Color(-86);

        Temas.IS_LINEAS = true;
        Temas.IS_SUBSTANCE = false;
    }

    private void ponerColoresEnLabels() {
        lblcomentario.setForeground(Colores.COMENTARIO_COLOR);
        lblReservada.setForeground(Colores.PALABRA_RESERVADA_COLOR);
        lblFunciones.setForeground(Colores.FUNCIONES_COLOR);
        lblCadenas.setForeground(Colores.CADENAS_Y_NUMEROS_COLOR);
        lblDatos.setForeground(Colores.TIPOS_DE_DATOS_COLOR);
        lblFondo.setBackground(Colores.FONDO_COLOR);
        lblCodigo.setForeground(Colores.CODIGO_COLOR);
        lblLineas.setBackground(Colores.LINEA_COLOR);
        //backgrounds
        lblcomentario.setBackground(Colores.FONDO_COLOR);
        lblReservada.setBackground(Colores.FONDO_COLOR);
        lblFunciones.setBackground(Colores.FONDO_COLOR);
        lblCadenas.setBackground(Colores.FONDO_COLOR);
        lblDatos.setBackground(Colores.FONDO_COLOR);
        lblCodigo.setBackground(Colores.FONDO_COLOR);

    }

    private void borrarSeleccionDeOpciones() {
        op3.setSelected(false);
        op4.setSelected(false);
        op5.setSelected(false);
        op6.setSelected(false);
        op7.setSelected(false);
        op8.setSelected(false);
        op9.setSelected(false);
        op10.setSelected(false);
        while (!tipo.isEmpty()) {
            tipo.remove(0);
        }
    }

//    private void verConectividad() {
//        new Thread(new Runnable() {
//
//            @Override
//            public void run() {
//                boolean isConectado = Conectividad.isConectado();
//                Cambiar.cambiarIconoLabel(estIcon, (isConectado ? "/imagenes/online.gif" : "/imagenes/offline.gif"));
//                estIcon.setText(isConectado ? "Conectado" : "Desconectado");
//                opOffline.setSelected(!isConectado);
//                
////                if(isConectado){//si esta conectadoAJchat a internet, me conecto a la BD
//                    try {
//                        conectarBD();
//                    } catch (        ParserConfigurationException | SAXException | IOException | ClassNotFoundException | SQLException ex) {
//                        Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
//                    }
////                }
//            }
//        }).start();
//    }
    private void iniciarSesion() {
        if (opOffline.isSelected()) {
            modalidadOffline(true);
            agregarTabDeInicio();
        } else {
            modalidadOffline(false);
            String nom = nomAlu.getText().trim();
            String pass = txtpas.getText();

            try {
                Conexion.sentencia = Conexion.con.createStatement();
                Conexion.rs = Conexion.sentencia.executeQuery(
                        "SELECT alumno.nom_alu, seccion.num_sec, seccion.cod_sec, alumno.cod_alu ,profesor.cod_pro "
                        + "FROM alumno, seccion, profesor "
                        + "WHERE alumno.cod_sec = seccion.cod_sec and seccion.cod_pro = profesor.cod_pro "
                        + "and alumno.usu_alu = '" + nom + "' and alumno.pas_alu = '" + pass + "'");
                if (Conexion.rs.next()) {//si es correcto el usuario y clave
                    agregarTabDeInicio();
                    Alumno.NOMBRE = Conexion.rs.getString("nom_alu");
                    Alumno.USUARIO_ALUMNO = nom;
                    Alumno.SECCION = Conexion.rs.getString("num_sec");
                    Alumno.SECCION_ID = Conexion.rs.getString("cod_sec");
                    Alumno.CODIGO = Conexion.rs.getString("cod_alu");
                    System.out.println("CODIGO ALUMNO: " + Alumno.CODIGO);
                    Alumno.PROFE_ID = Conexion.rs.getString("cod_pro");
                    Conexion.sentencia.close();
                    setTitle("JEDI C ALUMNO/A: " + Alumno.NOMBRE + " Secci√≥n: " + Alumno.SECCION);
                    Historial.addHistorial("Inici√≥ sesi√≥n");
                    
                    hiloEjercicios = new HEjercicio();
                    hiloEjercicios.start();
                    
                    hiloMensajeInbox = new HMensaje();
                    hiloMensajeInbox.start();
                    
                    formInicio.setVisible(false);
                    setVisible(true);
                } else {
                    Conexion.sentencia.close();
                    MensajeHilo.setMensaje(lblMenSesion, "Error de Inicio de Sesi√≥n. Verifique su informaci√≥n", Color.red, 5);
                    Historial.addHistorialGeneral("Alguien intent√≥ iniciar sesi√≥n: [user=" + nom + "]");
                    nomAlu.requestFocus();
                }
            } catch (SQLException ex) {
                Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NullPointerException ex) {
//                Mensaje.error("No se puede conectar. Al parece, no posee una conexion a internet");
                System.out.println(ex.getMessage());
            }
        }
    }

    private void formCambiarContrase√±a() {
        Redimensionar.redimensionarFormulario(formContrase√±a, false, "Contrase√±a");
        formContrase√±a.setVisible(true);
        formContrase√±a.setIconImage(this.getIconImage());
    }

    private void subirEjercicio() {
        String ejercicio = areas.get(index).getText();
        if (!ejercicio.trim().equalsIgnoreCase("")) {
            if (Alumno.EJERCICIO != null) {
                try {
                    File temp = new File(Rutas.CARPETA_TEMP);
                    if (!temp.exists()) {
                        temp.mkdir();
                    }

                    temp = new File(Rutas.CARPETA_TEMP + File.separator + Rutas.ARCHIVO_TEMP);

                    if (!temp.exists()) {
                        temp.createNewFile();
                    }

                    Archivo.escribirEnAchivo(temp.getPath(), ejercicio, true, false);
                    insertarArchivo(temp);
                } catch (SQLException | IOException ex) {
                    Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                Mensaje.error("Para poder subir un ejercicio, primero debes haber bajado un ejercicio de tu profesor");
            }
        } else {
            Mensaje.warning("Para subir un ejercicio, debe escribir una codificaci√≥n");
        }
    }

    private void cambiarContrase√±a() {
        String c1, c2;
        c1 = con1.getText();
        c2 = con2.getText();

        if (!c1.equals(c2)) {
            txtErr.setText("Las contrase√±as no coinciden. Por favor Revise");
        } else {
            String er = Clave.isClaveCorrecta(c2);
            if (er.isEmpty()) {//contrase√±a OK
                try {
                    //contrase√±a OK
                    Conexion.sentencia = Conexion.con.createStatement();
                    Conexion.sentencia.execute("UPDATE alumno SET pas_alu = '" + c1 + "' WHERE cod_alu = " + Alumno.CODIGO + "");
                    Conexion.sentencia.close();
                } catch (SQLException ex) {
                    Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
                }

                Historial.addHistorial("Ha cambiado la contrase√±a");
                txtErr.setForeground(Color.blue);
                txtErr.setText("SU CONTRASE√ëA SE HA CAMBIADO EXITOSAMENTE");
            } else {
                txtErr.setForeground(Color.red);
                txtErr.setText("La Contrase√±a debe contener lo siguiente:\n\n" + er);
            }
        }
    }

    private void modalidadOffline(boolean isOffline) {
        if (isOffline) {
            setTitle("JEDI C ALUMNO: [MODALIDAD OFFLINE]");
        }
        if (isOffline) {
            setVisible(true);
        }
        if (isOffline) {
            formInicio.setVisible(false);
        }
        btnSubirEjer.setEnabled(!isOffline);
        btnVerificarEjer.setEnabled(!isOffline);
        menuVerificar.setEnabled(!isOffline);
        menuSubir.setEnabled(!isOffline);
        btnCambiarClave.setEnabled(!isOffline);
        menuCambiarClave.setEnabled(!isOffline);
        btnChat.setEnabled(!isOffline);
        menuChat.setEnabled(!isOffline);
        btnInbox.setEnabled(!isOffline);
        salerrores.setText("");
    }

    private void cerrarSesion() throws ParserConfigurationException, SAXException, IOException, TransformerConfigurationException, FileNotFoundException, TransformerException {
        if(!opOffline.isSelected()){
            Historial.addHistorial("Cerr√≥ sesi√≥n");
            hiloEjercicios.stop();
            hiloMensajeInbox.stop();
        }
        guardarConfiguracionEnArchivo();
        if(salir()){
            this.setVisible(false);
            nomAlu.setText("");
            txtpas.setText("");
            nomAlu.requestFocus();

            formInicio.setVisible(true);
        }
//        verConectividad();
        
    }

    private void agregarTabDeInicio() {
        index = codigos.size();
        codigos.add(new Codigo(++cont, "P√°gina de Inicio", false));
        m_ejecutar.setEnabled(false);

        //        System.out.println("Indice Tab Nuevo: "+i);
//        panes.add(new javax.swing.JPanel());
//        panes.get(index).setLayout(new java.awt.BorderLayout());
//        panes.get(index).setName("P√°gina de inicio");
//        panes.get(index).setBackground(new java.awt.Color(0, 0, 0));
        
        JPanel pn = new javax.swing.JPanel();
        pn.setLayout(new java.awt.BorderLayout());
        pn.setName("P√°gina de inicio");
        pn.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.JLabel lblLogo = new javax.swing.JLabel();
        javax.swing.JLabel lbl1 = new javax.swing.JLabel();
        javax.swing.JLabel lbl2 = new javax.swing.JLabel();
        javax.swing.JLabel lbl3 = new javax.swing.JLabel();
        javax.swing.JLabel lbl4 = new javax.swing.JLabel();

        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logoInicio.png")));
        lblLogo.setBackground(Color.BLACK);

        javax.swing.JPanel panel2 = new javax.swing.JPanel();
        panel2.setBackground(new java.awt.Color(0, 0, 0));
        panel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl1.setForeground(new java.awt.Color(0, 204, 204));
        lbl1.setText("Para crear una nueva codificaci√≥n, presione ");
        panel2.add(lbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 270, -1));

        lbl2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbl2.setText("Bienvenido a JEDI C");
        lbl2.setForeground(new java.awt.Color(0, 204, 204));
        panel2.add(lbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, -1, -1));

        lbl3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/document--plus.png")));
        panel2.add(lbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, -1, -1));

        pn.add(lblLogo);
//
        tabconte.add("P√°gina de Inicio", pn);
        Pestana pestana = new Pestana(tabconte);
        tabconte.setTabComponentAt(tabconte.getTabCount()-1,pestana);
        

        areas.add(new RSyntaxTextArea());
        scrolls.add(new RTextScrollPane());
        tabconte.setSelectedIndex(0);
    }

    private void iniciarJChat() {
        if (!conectadoAJchat) {
            final JTextField nick = new JTextField();
            nick.requestFocus();
            Object[] obj = {"Escriba un Nick:\n", nick};
            Object stringArray[] = {"Entrar a JCHAT", "Cancelar"};
            int op;
            op = JOptionPane.showOptionDialog(null, obj, "JCHAT",
                    JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                    null, stringArray, obj);

            if (op == JOptionPane.YES_OPTION) {
                hiloConexion = new Thread(new Runnable() {

                    @Override
                    public void run() {
                        String[] a = new String[5];
                        try {
                            a[0] = getDatosConexion().getServer();
                        } catch (ParserConfigurationException | SAXException | IOException ex) {
                            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        a[1] = "4500";
                        a[2] = Alumno.USUARIO_ALUMNO;
                        if (nick.getText().trim().equalsIgnoreCase("")) {
                            a[3] = Alumno.USUARIO_ALUMNO;
                        } else {
                            a[3] = nick.getText().trim();
                        }
                        a[4] = Alumno.CODIGO;
                        System.out.println("Codigo alumno para chat: " + a[4]);
                        chat.aplicacion.AplicacionCliente.main(a);
                        conectadoAJchat = true;
                        System.out.println("HOLA");
                    }
                });
                hiloConexion.start();

                btnChat.setText("Cancelar inicio de JChat");
                menuChat.setText("Cancelar inicio de JChat...");

                while (hiloConexion.isAlive()) {
                    try {
                        Thread.sleep(500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                btnChat.setEnabled(true);
                menuChat.setEnabled(true);

                btnChat.setText("JChat");
                menuChat.setText("Iniciar JChat");
            }
        } else {
            Mensaje.informacion("Ya hay una instancia de JCHAT Abierto");
        }
    }

    private void conectarBD() throws ParserConfigurationException, SAXException, IOException, ClassNotFoundException, SQLException {
        Conexion.conectar(getDatosConexion());
        ConexionMensajeInbox.conectar(getDatosConexion());
        ConexionEjercProfesor.conectar(getDatosConexion());
    }

    private DatosConexion getDatosConexion() throws ParserConfigurationException, SAXException, IOException {
        JespXML archivo = new JespXML(Rutas.CONFIG_BD);
//        final Tag conexion = DOM.procesarArchivoXMLDom(new File(Rutas.CONFIG_BD));
        final Tag conexion = archivo.leerXML();

        return new DatosConexion() {

            @Override
            public String getServer() {
                Tag server = getTag("server");
                return server.getContenido();
            }

            @Override
            public String getUser() {
                return getAtributo("user", conexion).getValor();
            }

            @Override
            public String getPass() {
                return getAtributo("pass", conexion).getValor();
            }

            @Override
            public String getBaseDeDatos() {
                Tag bd = getTag("baseDeDatos");
                return bd.getContenido();
            }

            private Tag getTag(String nomTag) {
                for (Tag t : conexion.getTagsHijos()) {
                    if (t.getNombre().equalsIgnoreCase(nomTag)) {
                        return t;
                    }
                }
                return null;
            }

            private Atributo getAtributo(String nomAtributo, Tag tag) {
                for (Atributo a : tag.getAtributos()) {
                    if (a.getNombre().equalsIgnoreCase(nomAtributo)) {
                        return a;
                    }
                }
                return null;
            }
        };
    }

    public void insertarArchivo(File a) throws SQLException, FileNotFoundException {
        String sql = "INSERT INTO ejercicio_alumno(cod_alu, eje_alu, eje_pro, fec_eje) "
                + "VALUES (" + Alumno.CODIGO + ",?,'" + Alumno.EJERCICIO.getCodigo() + "',SYSDATE())";
        //Creamos una cadena para despu√©s prepararla
        System.out.println(sql);
        PreparedStatement stmt = Conexion.con.prepareStatement(sql);
        FileInputStream fis = new FileInputStream(a);
        //Lo convertimos en un Stream
        stmt.setBinaryStream(1, fis, (int) a.length());
        //Asignamos el Stream al Statement
        stmt.execute();
        Historial.addHistorial("Envi√≥ un ejercicio en respuesta a un ejercicio de profesor: [ejercicio=" + Alumno.EJERCICIO.getNombreEjercicio() + ", "
                + "descripci√≥n=" + Alumno.EJERCICIO.getDescripcion() + "]");
        Mensaje.informacion("Ejercicio enviado con √©xito");
    }

    private void descargarEjercicioProfesor(String cod_eje, File archivo) {
        try {
            String sql = "SELECT eje_pro FROM ejercicio_profesor where cod_eje = " + cod_eje + ";";
            Conexion.sentencia = Conexion.con.createStatement();
            Conexion.rs = Conexion.sentencia.executeQuery(sql);
            Blob ar = null;
            while (Conexion.rs.next()) {
                ar = Conexion.rs.getBlob("eje_pro");
                System.out.println("OK");
            }
            try (InputStream is = ar.getBinaryStream(); OutputStream out = new FileOutputStream(archivo)) {
                byte[] buf = new byte[1024];
                int len;
                while ((len = is.read(buf)) > 0) {
                    out.write(buf, 0, len);
                }
            }

//            InputStream is = ar.getBinaryStream();
//            System.out.println("paso");
//            OutputStream out = new FileOutputStream(archivo);
//            byte[] buf = new byte[1024];
//            int len;
//            while ((len = is.read(buf)) > 0) {
//                out.write(buf, 0, len);
//            }
//            out.close();
//            is.close();
        } catch (SQLException | IOException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean isEjercicioInXml(EjercicioProfesor ejercicio, File xmlEjerPro) {
        try {
            JespXML archivo = new JespXML(xmlEjerPro);
            Tag raiz = archivo.leerXML();
//            Tag raiz = DOM.procesarArchivoXMLDom(xmlEjerPro);
            for (Tag t : raiz.getTagsHijos()) {
                if (t.getValorDeAtributo("codigo").equalsIgnoreCase(ejercicio.getCodigo())) {
                    return true;
                }
            }
            return false;
        } catch (ParserConfigurationException | SAXException | IOException ex) {
            return false;
        }
    }

    private void cambiarEstadoDeEjercicioEnXml(EjercicioProfesor ejercicio) {
        try {
            JespXML archivo = new JespXML(Rutas.AR_CONF_EJER_PRO);
            Tag raiz = archivo.leerXML();
//            Tag raiz = DOM.procesarArchivoXMLDom(new File(Rutas.AR_CONF_EJER_PRO));
            for (Tag t : raiz.getTagsHijos()) {
                if (t.getValorDeAtributo("codigo").equalsIgnoreCase(ejercicio.getCodigo())) {
                    t.actualizarValorAtributo("visto", "si");
                    break;
                }
            }
//            DOM.crearArchivoXML(raiz, new File(Rutas.AR_CONF_EJER_PRO));
            archivo.escribirXML(raiz);
        } catch (TransformerConfigurationException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParserConfigurationException | SAXException | IOException ex) {
        }
    }

    private void cancelarInicioSesion() {
        hiloConexion.interrupt();
    }

//    private List<MensajeInbox> getMensajes() {
//        File xmlInbox = new File(Rutas.AR_CONF_INBOX);
//        if(!xmlInbox.exists()){
//            try {
//                DOM.crearArchivoXML(new Tag("mensajes"), xmlInbox);
//            } catch (ParserConfigurationException | FileNotFoundException |  TransformerException ex) {
//                Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
//        mens = new ArrayList();
//        MensajeInbox m;
//        try {
//            Conexion.sentencia = Conexion.con.createStatement();
//            Conexion.rs = Conexion.sentencia.executeQuery("select profesor.nom_pro, mensaje.cod_men, mensaje.asu_men, mensaje.fec_men, mensaje.men_men from mensaje, profesor where profesor.cod_pro = mensaje.cod_pro and mensaje.cod_alu = '"+Alumno.CODIGO+"'");
//            while(Conexion.rs.next()){
//                m = new MensajeInbox(Conexion.rs.getString("cod_men"), Conexion.rs.getString("asu_men"), Conexion.rs.getString("nom_pro"), Conexion.rs.getString("men_men"), Conexion.rs.getTimestamp("fec_men"));
//                m.setCodigo("a_"+m.getCodigo());
//                if(!isMensajeInXml(m, xmlInbox)){
//                   
//                    agregarMensajeAXml(m, xmlInbox);
//                }else{
//                    //si esta en xml, tengo que ver si lo ha leido o no
//                    m.setLeido(isLeido(m, xmlInbox));
//                }
//                mens.add(m);
//            }
//            Conexion.sentencia.close();
//            
//            
//            //mensajes seccion
//            Conexion.sentencia = Conexion.con.createStatement();
//            Conexion.rs = Conexion.sentencia.executeQuery("select profesor.nom_pro, mensaje_seccion.cod_men, mensaje_seccion.asu_men, mensaje_seccion.fec_men, mensaje_seccion.men_men from mensaje_seccion, profesor where profesor.cod_pro = mensaje_seccion.cod_pro and mensaje_seccion.cod_sec = '"+Alumno.SECCION_ID+"'");
//            while(Conexion.rs.next()){
//                m = new MensajeInbox(Conexion.rs.getString("cod_men"), Conexion.rs.getString("asu_men"), Conexion.rs.getString("nom_pro"), Conexion.rs.getString("men_men"), Conexion.rs.getTimestamp("fec_men"));
//                 m.setCodigo("s_"+m.getCodigo());
//                if(!isMensajeInXml(m, xmlInbox)){
//                    agregarMensajeAXml(m, xmlInbox);
//                }else{
//                    //si esta en xml, tengo que ver si lo ha leido o no
//                    m.setLeido(isLeido(m, xmlInbox));
//                }
//                mens.add(m);
//            }
//            Conexion.sentencia.close();
//        } catch (SQLException ex) {
//            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
//        } finally{
//            return mens;
//        }
//    }
    private void limpiarFormMensaje() {
        jLabel50.setText("");
        jLabel51.setText("");
        jTextArea1.setText("");
        jLabel53.setText("");
    }

    private void mostrarMensaje(MensajeInbox mi) {
        jLabel50.setText(mi.getProfesor());
        jLabel51.setText(mi.getFecha().toString());
        jTextArea1.setText(mi.getMensaje());
        jLabel53.setText(mi.getAsunto());
    }

    private boolean isMensajeInXml(MensajeInbox m, File xmlInbox) {
        try {
            JespXML archivo = new JespXML(xmlInbox);
            Tag raiz = archivo.leerXML();
//            Tag raiz = DOM.procesarArchivoXMLDom(xmlInbox);
            for (Tag t : raiz.getTagsHijos()) {
                if (t.getValorDeAtributo("codigo").equalsIgnoreCase(m.getCodigo())) {
                    return true;
                }
            }
            return false;
        } catch (ParserConfigurationException | SAXException | IOException ex) {
            return false;
        }
    }

//   
    private void marcarMensajeComoLeido(MensajeInbox mi) {
        try {
            JespXML archivo = new JespXML(Rutas.AR_CONF_INBOX);
            Tag raiz = archivo.leerXML();
//            Tag raiz = DOM.procesarArchivoXMLDom(new File(Rutas.AR_CONF_INBOX));
            for (Tag t : raiz.getTagsHijos()) {
                if (t.getValorDeAtributo("codigo").equalsIgnoreCase(mi.getCodigo())) {
                    t.actualizarValorAtributo("leido", "si");
                    break;
                }
            }
//            DOM.crearArchivoXML(raiz, new File(Rutas.AR_CONF_INBOX));
            archivo.escribirXML(raiz);
        } catch (TransformerConfigurationException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerException ex) {
            Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParserConfigurationException | SAXException | IOException ex) {
        }
    }

    private void verEjercicio() {
//        verificarEjerciciosServidor();
        listaEjercicios.setModel(new LMEjercicioProfesor(ejerciciosServidor));
        listaEjercicios.setCellRenderer(new CREjercicioProfesor());
//        Redimensionar.redimensionarFormulario(formBajar, true, "Ejercicios en el servidor");
        formBajar.setBounds(0, 0, 534, 411);
        formBajar.setLocationRelativeTo(null);
        formBajar.setResizable(true);
        formBajar.setTitle("Ejercicios en el servidor");
        Cambiar.iconoDeFormulario(formBajar, Rutas.ICONO_SERVIDOR);
        formBajar.setVisible(true);
    }

    private void construirObjetos() {
        u = new Utilidades();
        f1 = new For();
        f2 = new For();
        ejerciciosServidor = new ArrayList<>();
        mens = new ArrayList<>();
        codigos = new ArrayList();
        areas = new ArrayList();
        scrolls = new ArrayList();
        conectadoAJchat = false;
        
        tabconte.addMouseListener(new java.awt.event.MouseAdapter() {

            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                index = tabconte.getSelectedIndex();
                System.out.println("index seleccionado: " + index);
            }
        });
        cont = 0;
    }

    private void formatear() {
        this.setBounds(0, 0, 850, 600);
        this.setLocationRelativeTo(null);
        txtlib.setHorizontalAlignment(JTextField.CENTER);
        txtlib.setText("Aqu√≠ su Librer√≠a");
        txtlib.setForeground(Color.gray);

        txt_par_fun.setHorizontalAlignment(JTextField.CENTER);
        txt_par_fun.setText("Ej :int n1, int n2, int n3");
        txt_par_fun.setForeground(Color.gray);

        txt_var.setHorizontalAlignment(JTextField.CENTER);
        txt_var.setText("Ej: var1, var2 = 1, ... varN");
        txt_var.setForeground(Color.gray);

        form_for.setIconImage(new ImageIcon(Rutas.ICONO_ARRIBA).getImage());
        form_for2.setIconImage(new ImageIcon(Rutas.ICONO_ARRIBA).getImage());
        
        formInicio.setBounds(new Rectangle(737, 369));
        formInicio.setLocationRelativeTo(null);
        formInicio.setTitle("JEDIC Alumno");
        Cambiar.iconoDeFormulario(formInicio, "/imagenes/iconoArriba.png");
        Cambiar.iconoDeFormulario(JedicAlumno.dialogCompilacion, "/imagenes/iconoArriba.png");
        formInbox.setIconImage(this.getIconImage());
        formInbox.setTitle("Inbox");
    }

    private void verificarSiAbrirArchivoPorArgumento() {
        if (Rutas.RUTA_ABRIR != null) {
            modalidadOffline(true);
            try {
                index = codigos.size();
                crearNuevaCodificacion(index);
                codigos.get(index).modificarCodigoGuardado(true);
                codigos.get(index).borrarCodigo(false, areas.get(index));
                File fichero = new File(Rutas.RUTA_ABRIR);
                codigos.get(index).setPath(fichero.getPath(), fichero.getPath());

                BufferedReader reader = new BufferedReader(new FileReader(fichero));
                String linea = reader.readLine();
                while (linea != null) {
                    codigos.get(index).insertarEnCodigo(linea + "\n", areas.get(index), m_ejecutar,
                            m_guardar, tabconte);
                    linea = reader.readLine();
                }
                codigos.get(index).setNombre(codigos.get(index).getPathConExtension(), true);
                tabconte.setTitleAt(tabconte.getSelectedIndex(), codigos.get(index).getNombre());
            } catch (IOException e) {
                Mensaje.error(e.getMessage());
            }
        } else {
            formInicio.setVisible(true);
        }
    }
    
    public final void makeAcercaDe(){
        AcercaDe ad = new AcercaDe(new DatosAcercaDe() {

            @Override
            public String getNombreDelPrograma() {
                return "JEDI-C";
            }

            @Override
            public String getdescripcionCortaDelPrograma() {
                return "Editor de c√≥digos para lenguaje C hecho en Java";
            }

            @Override
            public String getAutor() {
                return "GENERATOR S.A.";
            }

            @Override
            public String getAno() {
                return "2012";
            }

            @Override
            public String getEmailDeContacto() {
                return "contacto@jedic.com";
            }

            @Override
            public Idioma getIdiomaLicencia() {
                return GPL.Idioma.AMBOS_IDIOMAS;
            }

            
        });
        ad.addComponent(menuItemAcercaDe);
    }

    private void initHistorial() {
        Historial.setNombreTabla("alumno");
        Historial.addHistorialGeneral("Se inici√≥ la ejecuci√≥n del sistema JEDIC Alumno");
    }

    private class HEjercicio extends Thread {

        private int contador;

        public HEjercicio() {
            contador = 0;
        }

        @Override
        public void run() {
            System.out.println("Hilo ejercicios iniciado!");
            while (true) {
                File xmlEjerPro = new File(Rutas.AR_CONF_EJER_PRO);
                if (!xmlEjerPro.exists()) {
                    try {
                        JespXML archivo = new JespXML(xmlEjerPro);
                        archivo.escribirXML(new Tag("ejercicios"));
//                        DOM.crearArchivoXML(new Tag("ejercicios"), xmlEjerPro);
                    } catch (ParserConfigurationException | FileNotFoundException | TransformerException ex) {
                        Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                try {
                    ConexionEjercProfesor.sentencia = ConexionEjercProfesor.con.createStatement();
//                    System.out.println(Alumno.PROFE_ID);
//                    System.out.println(Alumno.SECCION_ID);
                    String q = "SELECT cod_eje, nom_eje, "
                            + "des_eje, fec_eje "
                            + "FROM ejercicio_profesor "
                            + "WHERE (cod_sec = " + Alumno.SECCION_ID + " or cod_sec is null) and cod_pro = " + Alumno.PROFE_ID + " order by fec_cre desc";
                    ConexionEjercProfesor.rs = ConexionEjercProfesor.sentencia.executeQuery(q);
//                    System.out.println(q);
                    EjercicioProfesor ejercicio;
                    ejerciciosServidor = new ArrayList<>();

                    while (ConexionEjercProfesor.rs.next()) {
                        String nom, cod, des, fec, hor;
                        nom = ConexionEjercProfesor.rs.getString("nom_eje");
                        cod = ConexionEjercProfesor.rs.getString("cod_eje");
                        des = ConexionEjercProfesor.rs.getString("des_eje");
                        fec = ConexionEjercProfesor.rs.getString("fec_eje");
                        hor = clases.utilidades.Util.getHora(fec);
                        fec = clases.utilidades.Util.getFechaBonita(fec);
                        ejercicio = new EjercicioProfesor(nom, cod, des, fec, hor);
//                cboEjeDis.addItem(ejercicio);

                        ejerciciosServidor.add(ejercicio);
                        if (!isEjercicioInXml(ejercicio, xmlEjerPro)) {
                            agregarEjercicioAXml(ejercicio, xmlEjerPro);
                        } else {
                            //si esta en xml, tengo que ver si lo ha visto o no
                            ejercicio.setVisto(isVisto(ejercicio, xmlEjerPro));
                        }

                    }

                    int cantEjerNoVistos = getCantEjerciciosNoVistos(ejerciciosServidor);
//                    if (contador == 0) {
//                        contador = cantEjerNoVistos;
//                    } else if (contador < cantEjerNoVistos) {
//                        System.out.println(contador + " - " + cantEjerNoVistos);
//                        AudioFile a = new AudioFile(getClass().getResource("/audios/beep.wav").toURI());
//                        a.play(true);
//                        Thread.sleep(a.getMiliSegundos());
//                        AudioFile af = new AudioFile(getClass().getResource("/audios/hasRecibido.wav").toURI());
//                        af.play(true);
//                        contador = cantEjerNoVistos;
//                    } else if (contador > cantEjerNoVistos) {
//                        contador = cantEjerNoVistos;
//                    }
                    ponerIcono(cantEjerNoVistos);

                    ConexionEjercProfesor.sentencia.close();
                    Thread.sleep(1000);
                }  catch (InterruptedException | SQLException ex) {
                    if (ex instanceof SQLException) {
                        Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
                    } else {
                        System.out.println("Hilo ejercicios interrumpido");
                    }
                }
            }

        }
        
        private void agregarEjercicioAXml(EjercicioProfesor ejercicio, File xmlEjerPro) {
            try {
                //codigo nombre y visto
                Tag tEjer = new Tag("e");
                tEjer.addAtributo("codigo", ejercicio.getCodigo());
                tEjer.addAtributo("nombre", ejercicio.getNombreEjercicio());
                tEjer.addAtributo("visto", "no");
                ejercicio.setVisto(false);

                JespXML archivo = new JespXML(xmlEjerPro);
                Tag raiz = archivo.leerXML();
//                Tag raiz = DOM.procesarArchivoXMLDom(xmlEjerPro);
                raiz.addTagHijo(tEjer);
                archivo.escribirXML(raiz);
//                DOM.crearArchivoXML(raiz, xmlEjerPro);
            } catch (TransformerConfigurationException ex) {
                Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
            } catch (TransformerException ex) {
                Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParserConfigurationException | SAXException | IOException ex) {
                Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        private boolean isVisto(EjercicioProfesor ejercicio, File xmlEjerPro) {
            try {
                JespXML archivo = new JespXML (xmlEjerPro);
                Tag raiz = archivo.leerXML();
//                Tag raiz = DOM.procesarArchivoXMLDom(xmlEjerPro);
                for (Tag t : raiz.getTagsHijos()) {
                    if (t.getValorDeAtributo("codigo").equalsIgnoreCase(ejercicio.getCodigo())) {
                        if (t.getValorDeAtributo("visto").equalsIgnoreCase("no")) {
                            return false;
                        } else {
                            return true;
                        }
                    }
                }
                return false;
            } catch (ParserConfigurationException | SAXException | IOException ex) {
                return false;
            }
        }

        private int getCantEjerciciosNoVistos(List<EjercicioProfesor> ejerciciosServidor) {
            int c = 0;
            for (EjercicioProfesor ep : ejerciciosServidor) {
                if (!ep.isVisto()) {
                    c++;
                }
            }

            return c;
        }

        private void ponerIcono(int cantEjerNoVistos) {
            String rutaIcono;

            if (cantEjerNoVistos == 0) {
                rutaIcono = "/imagenes/server.png";
            } else if (cantEjerNoVistos > 10) {
                rutaIcono = "/imagenes/ejercicios/10+.png";
            } else {
                rutaIcono = "/imagenes/ejercicios/" + cantEjerNoVistos + ".png";
            }

            btnVerificarEjer.setIcon(new javax.swing.ImageIcon(getClass().getResource(rutaIcono)));
        }
    }

    private class HMensaje extends Thread {

        private int contador;

        public HMensaje() {
            contador = 0;
        }

        @Override
        public void run() {
            System.out.println("Hilo mensajes inbox iniciado");
            while (true) {
                File xmlInbox = new File(Rutas.AR_CONF_INBOX);
                if (!xmlInbox.exists()) {
                    try {
                        JespXML archivo = new JespXML(xmlInbox);
                        archivo.escribirXML(new Tag("mensajes"));
//                        DOM.crearArchivoXML(new Tag("mensajes"), xmlInbox);
                    } catch (ParserConfigurationException | FileNotFoundException | TransformerException ex) {
                        Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                mens = new ArrayList();
                MensajeInbox m;
                try {
                    ConexionMensajeInbox.sentencia = ConexionMensajeInbox.con.createStatement();
                    ConexionMensajeInbox.rs = ConexionMensajeInbox.sentencia.executeQuery("select profesor.nom_pro, mensaje.cod_men, mensaje.asu_men, mensaje.fec_men, mensaje.men_men from mensaje, profesor where profesor.cod_pro = mensaje.cod_pro and mensaje.cod_alu = '" + Alumno.CODIGO + "'");
                    while (ConexionMensajeInbox.rs.next()) {
                        m = new MensajeInbox(ConexionMensajeInbox.rs.getString("cod_men"), ConexionMensajeInbox.rs.getString("asu_men"), ConexionMensajeInbox.rs.getString("nom_pro"), ConexionMensajeInbox.rs.getString("men_men"), ConexionMensajeInbox.rs.getTimestamp("fec_men"));
                        m.setCodigo("a_" + m.getCodigo());
                        if (!isMensajeInXml(m, xmlInbox)) {
                            agregarMensajeAXml(m, xmlInbox);
                        } else {
                            //si esta en xml, tengo que ver si lo ha leido o no
                            m.setLeido(isLeido(m, xmlInbox));
                        }
                        mens.add(m);
                    }
                    ConexionMensajeInbox.sentencia.close();


                    //mensajes seccion
                    ConexionMensajeInbox.sentencia = ConexionMensajeInbox.con.createStatement();
                    ConexionMensajeInbox.rs = ConexionMensajeInbox.sentencia.executeQuery("select profesor.nom_pro, mensaje_seccion.cod_men, mensaje_seccion.asu_men, mensaje_seccion.fec_men, mensaje_seccion.men_men from mensaje_seccion, profesor where profesor.cod_pro = mensaje_seccion.cod_pro and mensaje_seccion.cod_sec = '" + Alumno.SECCION_ID + "'");
                    while (ConexionMensajeInbox.rs.next()) {
                        m = new MensajeInbox(ConexionMensajeInbox.rs.getString("cod_men"), ConexionMensajeInbox.rs.getString("asu_men"), ConexionMensajeInbox.rs.getString("nom_pro"), ConexionMensajeInbox.rs.getString("men_men"), ConexionMensajeInbox.rs.getTimestamp("fec_men"));
                        m.setCodigo("s_" + m.getCodigo());
                        if (!isMensajeInXml(m, xmlInbox)) {
                            agregarMensajeAXml(m, xmlInbox);
                        } else {
                            //si esta en xml, tengo que ver si lo ha leido o no
                            m.setLeido(isLeido(m, xmlInbox));
                        }
                        mens.add(m);
                    }
                    ConexionMensajeInbox.sentencia.close();

                    int cantMenNoVistos = getCantMensajesNoVistos(mens);
//                if (contador == 0) {
//                    contador = cantMenNoVistos;
//                } else if (contador < cantMenNoVistos) {
//                    AudioFile a = new AudioFile(getClass().getResource("/audios/beep.wav").toURI());
//                    a.play(true);
//                    Thread.sleep(a.getMiliSegundos());
//                    AudioFile af = new AudioFile(getClass().getResource("/audios/hasRecibido.wav").toURI());
//                    af.play(true);
//                    contador = cantMenNoVistos;
//                } else if (contador > cantMenNoVistos) {
//                    contador = cantMenNoVistos;
//                }
                    ponerIcono(cantMenNoVistos);
                    Thread.sleep(1000);
                } catch (        InterruptedException | SQLException ex) {
                    Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        private boolean isLeido(MensajeInbox m, File xmlInbox) {
            try {
                JespXML archivo = new JespXML(xmlInbox);
                Tag raiz = archivo.leerXML();
//                Tag raiz = DOM.procesarArchivoXMLDom(xmlInbox);
                for (Tag t : raiz.getTagsHijos()) {
//                    System.out.println();
//                    System.out.println(t.getValorDeAtributo("codigo"));
//                    System.out.println(m.getCodigo());
//                    System.out.println();
                    if (t.getValorDeAtributo("codigo").equalsIgnoreCase(m.getCodigo())) {
                        if (t.getValorDeAtributo("leido").equalsIgnoreCase("no")) {
                            return false;
                        } else {
                            return true;
                        }
                    }
                }
                return false;
            } catch (ParserConfigurationException | SAXException | IOException ex) {
                return false;
            }
        }

        private void agregarMensajeAXml(MensajeInbox m, File xmlInbox) {
            try {
                //codigo nombre y visto
                Tag tMen = new Tag("m");
                tMen.addAtributo("codigo", m.getCodigo());
                tMen.addAtributo("leido", "no");
                m.setLeido(false);

                JespXML archivo = new JespXML(xmlInbox);
                Tag raiz = archivo.leerXML();
//                Tag raiz = DOM.procesarArchivoXMLDom(xmlInbox);
//            Tag mensajes;

//            if(m instanceof MensajeAlumno){
//            
//            }else if(m instanceof MensajeSeccion){
//            
//            }
                raiz.addTagHijo(tMen);
//                DOM.crearArchivoXML(raiz, xmlInbox);
                archivo.escribirXML(raiz);
            } catch (TransformerConfigurationException ex) {
                Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
            } catch (TransformerException ex) {
                Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParserConfigurationException | SAXException | IOException ex) {
                Logger.getLogger(JedicAlumno.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        private int getCantMensajesNoVistos(List<MensajeInbox> mensajes) {
            int c = 0;
            for (MensajeInbox mi : mensajes) {
                if (!mi.isLeido()) {
                    c++;
                }
            }

            return c;
        }

        private void ponerIcono(int cantEjerNoVistos) {
            String rutaIcono;

            if (cantEjerNoVistos == 0) {
                rutaIcono = "/imagenes/inbox.png";
            } else if (cantEjerNoVistos > 10) {
                rutaIcono = "/imagenes/mensajes/10+.png";
            } else {
                rutaIcono = "/imagenes/mensajes/" + cantEjerNoVistos + ".png";
            }

            btnInbox.setIcon(new javax.swing.ImageIcon(getClass().getResource(rutaIcono)));
        }
    }
    
     public class Pestana extends JPanel implements ActionListener {
        private final JTabbedPane panelContenedor; 
        private JLabel contenido; //texto de la pesta√±a
        private JButton botonCerrar; //el famoso botonCerrar ;)

        
        public Pestana(final JTabbedPane panelContenedor) {

            super(new FlowLayout(FlowLayout.LEFT, 0, 0));
            this.panelContenedor = panelContenedor;
            setOpaque(false);

//        labelIcono = new JLabel();
//        labelIcono.setIcon(
//                new ImageIcon(getClass().getResource("/resource/documento_mini.png")));

            //obtengo el indice del JPanel al que fue agregado "esta" pesta√±a
//            int i = panelContenedor.indexOfTabComponent(this);

            //Obtengo el titulo que le fue asignado al JPanel
            contenido = new JLabel() {

                @Override
                public String getText() {
                    //necesito el indice de nuevo porque este es el espacio de la nueva clase
                    //para ello hago referencia a la clase contenedora de la que estoy ahora |
                    int i = panelContenedor.indexOfTabComponent(clases.principal.JedicAlumno.Pestana.this); //  <---------|
                    if (i != -1) {
                        return panelContenedor.getTitleAt(i);
                    }
                    return null;
                }
            };
            
            contenido.setToolTipText(contenido.getText());

            //agregamos el icono y establecemos un borde, para crear una distancia
            //por default entre este y otros coponentes cercanos a el
//        add(labelIcono);
//        labelIcono.setBorder(BorderFactory.createEmptyBorder(0,0,0,5));

            //agregamos el texto de la pesta√±a y establecemos una
            //distancia por default entre este componente y los demas
            contenido.setPreferredSize(new Dimension(150,20));
            contenido.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            setBold(false);
            add(contenido);
            
//            contenido.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 5));

            //el boton close
            botonCerrar = new JButton();
            botonCerrar.setText("x");
            botonCerrar.setHorizontalAlignment(SwingConstants.CENTER);
            int size = 20;
            botonCerrar.setPreferredSize(new Dimension(size, size));
            botonCerrar.setToolTipText("Cerrar esta pesta√±a");
            botonCerrar.setUI(new BasicButtonUI());
            //hacemos transparente su relleno
            botonCerrar.setContentAreaFilled(false);
            //No necesita ser enfocable
            botonCerrar.setFocusable(false);
            botonCerrar.setBorder(BorderFactory.createEtchedBorder());
            botonCerrar.setBorderPainted(false);
            //Efecto de enmarcado cuando el mouse pasa sobre el
            botonCerrar.addMouseListener(eventosRaton);
            botonCerrar.setRolloverEnabled(true);
            //Listener para obtener controlar los eventos del boton
            botonCerrar.addActionListener(this);
            //Nuestro cursor para el componente ;)
//        botonCerrar.setCursor(MyHandCursor.getDefault());
            add(botonCerrar);
            //de nuevo un borde predeterminado
//            setBorder(BorderFactory.createEmptyBorder(2, 0, 0, 0));
            
        }

        @Override
        public void actionPerformed(ActionEvent ev) {
            Object o = ev.getSource();
            if (o == botonCerrar) {
                //de nuevo el indice de ficha a la que pertenece "esta" pesta√±a
                int i = panelContenedor.indexOfTabComponent(this);
                if (i != -1) {
                    index = i;
                    if (!codigos.get(index).codigoGuardado()) {
                        Mensaje.OPCION = Mensaje.preguntaSiNoCancelar("El c√≥digo actual \"" + codigos.get(index).getNombre() + "\" a√∫n no se ha guardado, ¬øDesea Guardar antes de cerrar la pesta√±a?");
                        if(Mensaje.OPCION != Mensaje.CANCELAR){
                            if(Mensaje.OPCION == Mensaje.SI){
                                if (codigos.get(index).getPathConExtension() == null) {
                                    guardarComo();
                                } else {
                                    codigos.get(index).guardar(m_guardar);
                                }
                            }
                            codigos.remove(index);
                            scrolls.remove(index);
                            areas.remove(index);
                            //quitando el JPanel al que pertenece esta pesta√±a
                            panelContenedor.remove(i);
                            System.out.println("Indice removido: "+index);
                            index = panelContenedor.getSelectedIndex();
                            System.out.println("Indice sel: "+index);
                        }
                    } else{
                        codigos.remove(index);
                        scrolls.remove(index);
                        areas.remove(index);
                        //quitando el JPanel al que pertenece esta pesta√±a
                        panelContenedor.remove(i);
                        System.out.println("Indice removido: "+index);
                        index = panelContenedor.getSelectedIndex();
                        System.out.println("Indice sel: "+index);
                    }
                    
                    
//                    ventanas.remove(i);
                    if (tabconte.getTabCount() == 0) {
//                        formChat.setVisible(false);
                    }
                }else{
                    System.out.println("i=-1");
                }
            }
        }

        private MouseListener eventosRaton = new MouseAdapter() {

            @Override
            public void mouseEntered(MouseEvent e) {
                Component component = e.getComponent();
                //es un boton?
                if (component instanceof JButton) {
                    //casting
                    JButton button = (JButton) component;
                    //el mouse lo se√±ala, pintemos el marco del boton
                    button.setBorderPainted(true);
                    button.setForeground(Color.red);
//                    button.updateUI();
                }
            }

            @Override
            public void mouseExited(MouseEvent e) {
                Component component = e.getComponent();
                //es un boton?
                if (component instanceof JButton) {
                    //casting
                    JButton button = (JButton) component;
                    //el mouse ya no lo se√±ala, quite el marco del boton
                    button.setBorderPainted(false);
                    button.setForeground(Color.black);
//                    button.updateUI();
                }
            }
        };
        public void setBold(boolean valor){
            contenido.setFont(new Font(Font.SANS_SERIF, (valor?Font.BOLD:Font.PLAIN), 12));
        }
        
        public String getNombre(){
            return contenido.getText();
        }
        
        public void setNombre(String nombre){
            contenido.setText(nombre);
        }
    }
     
     
}
